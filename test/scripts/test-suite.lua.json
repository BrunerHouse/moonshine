{"sourceName":"\n\ndo\n\tlocal passed, failed = 0, 0\n\t\n\tfunction assertTrue (condition, message)\n\t\tif not condition then \n\t\t\tfailed = failed + 1\n\t\t\tprint (message)\n\t\telse\n\t\t\tpassed = passed + 1\n\t\tend\n\t\t\n\t\treturn condition\n\tend\n\t\n\t\n\tfunction showResults ()\t\t\n\t\tprint \"\\n------------------------\"\n\t\tif failed == 0 then\n\t\t\tprint \" Passed.\"\n\t\telse\n\t\t\tprint \"FAILED!\"\n\t\tend\n\n\t\tprint \"------------------------\\n\"\t\t\n\t\tprint (\"Total asserts: \"..(passed + failed)..\"; Passed: \"..passed..\"; Failed: \"..failed)\n\tend\n\nend\n\n\nlocal a = 1\nassertTrue (a == 1, 'Local should retain value')\n\nlocal a, b = 5, 20\nassertTrue (a == 5, 'Local should change value')\nassertTrue (b == 20, 'Local should accept multiple assignments')\n\nlocal result = a + b\nassertTrue (result == 25, 'Plus operator should result in addition of operands')\n\nresult = a - b\nassertTrue (result == -15, 'Minus operator should result in subtraction of operands')\n\nresult = a * b\nassertTrue (result == 100, 'Asterisk operator should result in multiplication of operands')\n\nresult = b / a\nassertTrue (result == 4, 'Slash operator should result in division of operands')\n\nresult = a / b\nassertTrue (result == .25, 'Division should handle floating point results')\n\nresult = 5 % 3\nassertTrue (result == 2, 'Modulo operator should return the remainder of the division of the two operands')\n\n\nassertTrue (a == a, 'Equality operator should return true if first operand is equal to second')\nassertTrue (not (a == b), 'Equality operator should return false if first operand is not equal to second')\n\nassertTrue (a < b, 'Less than should return true if first operand is less than second')\nassertTrue (not (a < a), 'Less than should return false if first operand is equal to second')\nassertTrue (not (b < a), 'Less than should return false if first operand is greater than second')\n\nassertTrue (b > a, 'Greater than should return true if first operand is Greater than second')\nassertTrue (not (a > a), 'Greater than should return false if first operand is equal to second')\nassertTrue (not (a > b), 'Greater than should return false if first operand is less than second')\n\nassertTrue (a <= b, 'Less than or equal to should return true if first operand is less than second')\nassertTrue (a <= a, 'Less than or equal to should return true if first operand is equal to second')\nassertTrue (not (b <= a), 'Less than or equal to should return false if first operand is greater than second')\n\nassertTrue (b >= a, 'Greater than or equal to should return true if first operand is Greater than second')\nassertTrue (a >= a, 'Greater than or equal to should return true if first operand is equal to second')\nassertTrue (not (a >= b), 'Greater than or equal to should return false if first operand is less than second')\n\nassertTrue (true, 'True should be true')\nassertTrue (0, '0 should coerce to true')\nassertTrue (1, '1 should coerce to true')\nassertTrue ('moo', 'A string should coerce to true')\nassertTrue ('', 'An empty string should coerce to true')\nassertTrue ({}, 'An empty table should coerce to true')\n\nassertTrue (not false, 'False should coerce to false')\nassertTrue (not nil, 'nil should coerce to false')\n\n\nfunction addOne ()\n\tassertTrue (b == 20, 'Functions should be able to access locals of parent closures [1]')\n\t\n\tfunction nested ()\n\t\tassertTrue (b == 20, 'Functions should be able to access locals of parent closures [2]')\n\t\t\n\t\tlocal c = 9\n\t\tassertTrue (c == 9, 'Functions should be able to access their own locals')\n\tend\n\t\n\tnested ()\n\tassertTrue (c == nil, 'Function locals should not be accessible from outside the function')\n\t\n\tb = b + 1\n\tassertTrue (b == 21, 'Operations performed on upvalues should use external value')\nend\n\naddOne ()\nassertTrue (b == 21, 'Operations performed on upvalues in functions should affect the external value too')\n\n\nfunction f (...)\n\tlocal a, b, c = ...\t\n\tassertTrue (a == -1, 'Varargs should pass values around correctly [1]')\n\tassertTrue (b == 0, 'Varargs should pass values around correctly [2]')\n\tassertTrue (c == 2, 'Varargs should pass values around correctly [3]')\n\n\tlocal d, e, f, g, h = ...\n\tassertTrue (d == -1, 'Varargs should pass values around correctly [4]')\n\tassertTrue (e == 0, 'Varargs should pass values around correctly [5]')\n\tassertTrue (f == 2, 'Varargs should pass values around correctly [6]')\n\tassertTrue (g == 9, 'Varargs should pass values around correctly [7]')\n\tassertTrue (h == nil, 'Varargs should pass nil for list entries beyond its length')\nend\n\nf(-1,0,2,9)\n\n\nfunction g (a, ...)\n\tlocal b, c = ...\t\n\tassertTrue (a == -1, 'Varargs should pass values around correctly [8]')\n\tassertTrue (b == 0, 'Varargs should pass values around correctly [9]')\n\tassertTrue (c == 2, 'Varargs should pass values around correctly [10]')\nend\n\ng(-1,0,2,9)\n\n\nfunction h (a, b, ...)\n\tlocal c = ...\t\n\tassertTrue (a == -1, 'Varargs should pass values around correctly [11]')\n\tassertTrue (b == 0, 'Varargs should pass values around correctly [12]')\n\tassertTrue (c == 2, 'Varargs should pass values around correctly [13]')\nend\n\nh(-1,0,2,9)\n\n\nassertTrue (true and true, 'And operator should return true if both operands are true')\nassertTrue (not (false and true), 'And operator should return false if first operand is false')\nassertTrue (not (true and false), 'And operator should return false if second operand is false')\nassertTrue (not (false and false), 'And operator should return false if both operands are false')\n\nassertTrue (true or true, 'Or operator should return true if both operands are true')\nassertTrue (false or true, 'Or operator should return true even if first operand is false')\nassertTrue (true or false, 'Or operator should return true even if second operand is false')\nassertTrue (not (false or false), 'Or operator should return false if both operands are false')\n\n\nlocal a, b, i = 0, 0, 0\n\nfor i = 1, 5 do\n\ta = a + 1\n\tb = b + i\nend\n\nassertTrue (a == 5, 'For loop should iterate the correct number of times')\nassertTrue (b == 15, 'For loop variable should hold the value of the current iteration')\n\n\na = {1,2,3,4}\nb = a\n\nassertTrue (a == b, 'Tables should be able to be compared by identity')\nassertTrue (not (a == {1,2,3,4}), 'Tables should not be able to be compared to literals')\nassertTrue (#a == 4, 'Length operator should return the number of items in a table')\n\n\nassertTrue (a[1] == 1, 'Square brackets operation on table should return correct value for index [1]')\nassertTrue (a[2] == 2, 'Square brackets operation on table should return correct value for index [2]')\nassertTrue (a[3] == 3, 'Square brackets operation on table should return correct value for index [3]')\nassertTrue (a[4] == 4, 'Square brackets operation on table should return correct value for index [4]')\nassertTrue (a[5] == nil, 'Square brackets operation on table should return nil for an index greater than the length')\nassertTrue (a[0] == nil, 'Square brackets operation on table should return nil for an index of 0')\nassertTrue (a[-1] == nil, 'Square brackets operation on table should return nil for an index less than 0')\n\n\na = {[1] = 20, [3] = 40}\nassertTrue (a[1] == 20, 'Square brackets operation on table should return correct value for index when keys are used in literal assignment [1]')\nassertTrue (a[2] == nil, 'Square brackets operation on table should return correct value for index when keys are used in literal assignment [2]')\nassertTrue (a[3] == 40, 'Square brackets operation on table should return correct value for index when keys are used in literal assignment [3]')\nassertTrue (a[4] == nil, 'Square brackets operation on table should return correct value for index when keys are used in literal assignment [4]')\n\n\na = { a = 1, b = 2 }\nb = 0\n\nfor _ in pairs(a) do b = b + 1 end\n\nassertTrue (b == 2, 'For block should iterate over all properties of a table')\n\n\na.a = nil\nb = 0\n\nfor _ in pairs(a) do b = b + 1 end\n\nassertTrue (b == 1, 'Setting a table property to nil should remove that property from the table.')\n\n\n\n\n\nfunction getFunc ()\n\tlocal b = 6\n\treturn function () return b end\nend\n\nx = getFunc () ()\nassertTrue (x == 6, 'Functions should be able to return functions (and maintain their scope)')\n\n\n\nfunction add (val1)\n\treturn function (val2) return val1 + val2 end\nend\n\nlocal addThree = add (3)\nx = addThree (4)\n\nassertTrue (x == 7, 'Functions should be able to be curried')\n\n\n\nb = {}\n\nfor i = 1, 3 do\n\tlocal c = i\n\tb[i] = function() return c end\nend\n\nassertTrue (b[1]() == 1, 'Local within a closure should keep its value [1]')\nassertTrue (b[2]() == 2, 'Local within a closure should keep its value [2]')\nassertTrue (b[3]() == 3, 'Local within a closure should keep its value [3]')\n\n\n\n\n-- Coercion\n\nassertTrue (0, 'Zero should coerce to true.')\nassertTrue (1, 'Positive number should coerce to true.')\nassertTrue (-1, 'Negative number should coerce to true.')\nassertTrue ('Test', 'String should coerce to true.')\nassertTrue ('', 'Empty string should coerce to true.')\n\nassertTrue (not (nil), 'Nil should coerce to false.')\nassertTrue (not (false), 'False should be false.')\nassertTrue (not (10 == '10'), 'String should coerce to number.')\n\n\n\n\nlocal tests = {\n\taddition = function (a, b) return a + b end,\n\tsubtraction = function (a, b) return a - b end,\n\tmuliplication = function (a, b) return a * b end,\n\tdivision = function (a, b) return a / b end,\n\tmodulus = function (a, b) return a % b end,\n\tpow = function (a, b) return a ^ b end,\n\t['unary-minus'] = function (a, b) return -a, -b end\n}\n\nfor name, test in pairs(tests) do\n\n\tlocal success, result = pcall (test, 5, 2)\n\tassertTrue (success, 'Simple use of '..name..' operator should not fail')\n\t\n\tsuccess, result = pcall (test, '3', 6)\n\tassertTrue (success, 'Applying '..name..' operator to a string containing a number should not error [1]')\n\t\n\tsuccess, result = pcall (test, '3.', 9)\n\tassertTrue (success, 'Applying '..name..' operator to a string containing a number should not error [2]')\n\t\n\tsuccess, result = pcall (test, '3.2', 9)\n\tassertTrue (success, 'Applying '..name..' operator to a string containing a number should not error [3]')\n\t\n\tsuccess, result = pcall (test, '3.2e4', 9)\n\tassertTrue (success, 'Applying '..name..' operator to a string containing an exponenial number should not error [4]')\n\t\n\tsuccess, result = pcall (test, 8, '2')\n\tassertTrue (success, 'Passing a string containing a number to the '..name..' operator should not error [1]')\n\t\n\tsuccess, result = pcall (test, 1, '2.')\n\tassertTrue (success, 'Passing a string containing a number to the '..name..' operator should not error [2]')\n\t\n\tsuccess, result = pcall (test, 1, '2.5')\n\tassertTrue (success, 'Passing a string containing a number to the '..name..' operator should not error [3]')\n\t\n\tsuccess, result = pcall (test, 1, '2.5e3')\n\tassertTrue (success, 'Passing a string containing an exponential number to the '..name..' operator should not error [4]')\n\t\n\tsuccess, result = pcall (test, '9', '2')\n\tassertTrue (success, 'Applying '..name..' operator to two strings containing a numbers should not error')\n\t\n\tsuccess, result = pcall (test, 'a', 2)\n\tassertTrue (not success, 'Applying '..name..' operator to an alpha string should error [1]')\n\t\n\tsuccess, result = pcall (test, '8a', 2)\n\tassertTrue (not success, 'Applying '..name..' operator to an alpha string should error [2]')\n\t\n\tsuccess, result = pcall (test, 'a8', 2)\n\tassertTrue (not success, 'Applying '..name..' operator to an alpha string should error [3]')\n\t\n\tsuccess, result = pcall (test, 8, '2a')\n\tassertTrue (not success, 'Passing an alpha string to the '..name..' operator should error')\n\t\nend\n\n\n\n\n\n-- TABLES\n\n\nAccount = { balance = 0 }\n\nfunction Account:new (o)\n\to = o or {}\n\tsetmetatable (o,self)\n\tself.__index = self\n\treturn o\nend \n\nfunction Account:deposit (v)\n\tself.balance = self.balance + v\nend\n\nfunction Account:withdraw (v)\n\tif v > self.balance then error \"insufficient funds\" end\n\tself.balance = self.balance - v\nend\n\n\nacc = Account:new ()\n\n\nassertTrue (acc.balance == 0, 'Class properties should be initiated when instantiated [1]')\n\nacc:deposit (20)\nassertTrue (acc.balance == 20, 'Class instance properties should be updatable though instance method calls [1]')\n\nacc:withdraw (5)\nassertTrue (acc.balance == 15, 'Class instance properties should maintain their value in the instance')\n\n\nacc2 = Account:new ()\n\nassertTrue (acc2.balance == 0, 'Class properties should be initiated when instantiated [2]')\n\nacc2:deposit (50)\nassertTrue (acc2.balance == 50, 'Class instance properties should be updatable though instance method calls [2]')\nassertTrue (acc.balance == 15, 'Class instance properties should maintain their value separate to other instances')\n\n\n\nSpecialAccount = Account:new ()\n\nfunction SpecialAccount:withdraw (v)\n\tif v - self.balance >= self:getLimit () then\n\t\terror \"insufficient funds\"\n\tend\n\t\n\tself.balance = self.balance - v\nend\n\nfunction SpecialAccount:getLimit ()\n\treturn self.limit or 0\nend\n\n\ns = SpecialAccount:new {limit=1000.00}\n\nassertTrue (s.balance == 0, 'Class properties should be initiated when instantiated, even if class is inherited')\nassertTrue (s:getLimit () == 1000, 'Inherited class should have its own properties')\nassertTrue (acc.getLimit == nil, 'Base class properties should not change when inherited class manipulated')\n\ns:deposit (500)\nassertTrue (s.balance == 500, 'Class instance properties should be updatable though instance method calls [3]')\n\n\nfunction f () \n\treturn 1, 3, 9\nend\n\nlocal t = {f()}\n\nassertTrue (t[1] == 1, 'Table should be able to be instantiated by the result of a function [1]')\nassertTrue (t[2] == 3, 'Table should be able to be instantiated by the result of a function [2]')\nassertTrue (t[3] == 9, 'Table should be able to be instantiated by the result of a function [3]')\n\n\n\n\n\n-------------\n-- LIBRARY --\n-------------\n\n\n-- BASIC FUNCTIONS\n\n\n-- assert\nlocal ass = function (test)\n\treturn assert (test, 'error message')\nend\n\na, b, c = pcall (ass, true)\nassertTrue (a, 'Assert should not throw an error when passed true')\nassertTrue (b, 'Assert should return the value passed in the first return value')\nassertTrue (c == 'error message', 'Assert should return the message passed in the second return value')\n\na, b, c = pcall (ass, 0)\nassertTrue (a, 'Assert should not throw an error when passed 0')\n\na, b, c = pcall (ass, 1)\nassertTrue (a, 'Assert should not throw an error when passed 1')\n\na, b, c = pcall (ass, '')\nassertTrue (a, 'Assert should not throw an error when passed an empty string')\n\na, b, c = pcall (ass, nil)\nassertTrue (not a, 'Assert should throw an error when passed nil')\n--assertTrue (b == 'error message', 'Assert should throw an error with the given message')\n\na, b, c = pcall (ass, false)\nassertTrue (not a, 'Assert should throw an error when passed false')\n\n\n\n\n\n\n-- getmetatable\n-- TODO\n\n\nfunction paul1 ()\n\tfunction paul2 ()\n\t\tlocal a = 'a'..6\n\tend\n\t\n\tpaul2 ()\nend\npaul1 ()\n\n\n-- ipairs\n\nlocal a = {2,4,8}\nlocal b = ''\n\nfor i, v in ipairs(a) do\n\tb = b..'['..i..'='..v..']'\nend\n\nassertTrue (b == '[1=2][2=4][3=8]', 'ipairs() should iterate over table items [1]')\n\n\n\n\n-- pairs\n\nlocal a, b = \"\", {foo=1}\nb[\"bar\"] = \"Hello\"\n\nfor i, v in pairs(b) do\n\ta = a..i..':'..v..';'\nend\n\nassertTrue (#a == #'bar:Hello;foo:1;', 'pairs() should iterate over table items [2]')\t-- Have to compare lengths because order is arbitrary\n\n\n\n\n-- pcall\n\nfunction goodfunc (x) \n\treturn x + 1, x + 2\nend \n\nfunction badfunc ()\n\terror ('I\\'m bad.')\nend \n\na, b, c = pcall (goodfunc, 6)\n\nassertTrue (a == true, 'pcall() should return true in the first item when a function executes successfully')\nassertTrue (b == 7, 'pcall() should return the result of the function in the items following the first item returned, when a function executes successfully [1]')\nassertTrue (c == 8, 'pcall() should return the result of the function in the items following the first item returned, when a function executes successfully [2]')\n\n\na, b, c = pcall (badfunc, 6)\n\nassertTrue (a == false, 'pcall() should return false in the first item when the function errors during execution')\nassertTrue (not (b == nil), 'pcall() should return an error message in the second item when the function error during execution')\nassertTrue (c == nil, 'pcall() should only return 2 items when the function error during execution')\n\n\n\n\n-- rawequal\n-- rawget\n-- rawset\n\n-- TODO\n\n\n\n\n-- select\n\nlocal a, b, c, d = select (3, 2, 4, 6, 8, 10)\n\nassertTrue (a == 6, 'select() should return its own arguments from the (n + 1)th index, where n is the value of the first argument [1]')\nassertTrue (b == 8, 'select() should return its own arguments from the (n + 1)th index, where n is the value of the first argument [2]')\nassertTrue (c == 10, 'select() should return its own arguments from the (n + 1)th index, where n is the value of the first argument [3]')\nassertTrue (d == nil, 'select() should return its own arguments from the (n + 1)th index, where n is the value of the first argument [4]')\n\n\nlocal a, b = select ('#', 2, 4, 6, 8, 10)\n\nassertTrue (a == 5, 'select() should return the total number of arguments - 1, when the first argument is \"#\" [1]')\nassertTrue (b == nil, 'select() should return the total number of arguments - 1, when the first argument is \"#\" [2]')\n\n\nlocal f = function ()\n\tlocal x, y = select ('moo', 2, 4, 6, 8, 10)\nend\n\nlocal a, b = pcall (f)\n\nassertTrue (a == false, 'select() should error if the first argument is not a number or a string with the value of \"#\"')\n\n\n\n\n-- setmetatable\n-- TODO\n\n\n\n\n-- tonumber\n\nlocal a = tonumber ('1234')\nlocal b = tonumber ('1234 ')\nlocal c = tonumber (' 1234 ')\nlocal d = tonumber ('1234abc')\nlocal e = tonumber ('1234 12')\nlocal f = tonumber ('1.234')\nlocal g = tonumber ('1.234e+5')\nlocal h = tonumber ('1.234e-5')\n\nassertTrue (a == 1234, 'tonumber() should convert basic numeric strings to decimal and default to base 10')\nassertTrue (b == 1234, 'tonumber() should convert numeric strings suffixed with spaces [1]')\nassertTrue (c == 1234, 'tonumber() should convert numeric strings prefixed with spaces [1]')\nassertTrue (d == nil, 'tonumber() should not convert strings containing letters [1]')\nassertTrue (e == nil, 'tonumber() should not convert numeric strings containing spaces in the middle [1]')\nassertTrue (f == 1.234, 'tonumber() should convert numeric strings of floating point numbers at base 10 [1]')\nassertTrue (g == 123400, 'tonumber() should convert numeric strings of exponential (+ve) numbers at base 10 [1]')\nassertTrue (h == 0.00001234, 'tonumber() should convert numeric strings of exponential (-ve) numbers at base 10 [1]')\n\n\nlocal a = tonumber ('1234', 10)\nlocal b = tonumber ('1234 ', 10)\nlocal c = tonumber (' 1234 ', 10)\nlocal d = tonumber ('1234abc', 10)\nlocal e = tonumber ('1234 12', 10)\nlocal f = tonumber ('1.234', 10)\nlocal g = tonumber ('1.234e+5', 10)\nlocal h = tonumber ('1.234e-5', 10)\n\nassertTrue (a == 1234, 'tonumber() should convert basic numeric strings to decimal with base 10')\nassertTrue (b == 1234, 'tonumber() should convert numeric strings suffixed with spaces [2]')\nassertTrue (c == 1234, 'tonumber() should convert numeric strings prefixed with spaces [2]')\nassertTrue (d == nil, 'tonumber() should not convert strings containing letters [2]')\nassertTrue (e == nil, 'tonumber() should not convert numeric strings containing spaces in the middle [2]')\nassertTrue (f == 1.234, 'tonumber() should convert numeric strings of floating point numbers at base 10 [2]')\nassertTrue (g == 123400, 'tonumber() should convert numeric strings of exponential (+ve) numbers at base 10 [2]')\nassertTrue (h == 0.00001234, 'tonumber() should convert numeric strings of exponential (-ve) numbers at base 10 [2]')\n\n\nlocal a = tonumber ('101', 2)\nlocal b = tonumber ('101 ', 2)\nlocal c = tonumber (' 101 ', 2)\nlocal d = tonumber ('101abc', 2)\nlocal e = tonumber ('101 10', 2)\nlocal f = tonumber ('101.10', 2)\nlocal g = tonumber ('1.01e+10', 2)\n\nassertTrue (a == 5, 'tonumber() should convert basic numeric strings to decimal with base 2')\nassertTrue (b == 5, 'tonumber() should convert numeric strings suffixed with spaces with base 2')\nassertTrue (c == 5, 'tonumber() should convert numeric strings prefixed with spaces with base 2')\nassertTrue (d == nil, 'tonumber() should not convert strings containing letters with base 2')\nassertTrue (e == nil, 'tonumber() should not convert numeric strings containing spaces in the middle with base 2')\nassertTrue (f == nil, 'tonumber() should not convert numeric strings of floating point numbers at base 2')\nassertTrue (g == nil, 'tonumber() should not convert numeric strings of exponential numbers at base 2')\n\n\nlocal a = tonumber ('123', 16)\nlocal b = tonumber ('1AF', 16)\nlocal c = tonumber ('1AF ', 16)\nlocal d = tonumber (' 1AF ', 16)\nlocal e = tonumber ('123Axyz', 16)\nlocal f = tonumber ('123 45', 16)\nlocal g = tonumber ('123.4', 16)\nlocal h = tonumber ('1.23e+10', 16)\n\nassertTrue (a == 291, 'tonumber() should convert basic numeric strings to decimal with base 16')\nassertTrue (b == 431, 'tonumber() should convert hexadecimal strings to decimal with base 16')\nassertTrue (c == 431, 'tonumber() should convert hexadecimal strings suffixed with spaces with base 16')\nassertTrue (d == 431, 'tonumber() should convert hexadecimal strings prefixed with spaces with base 16')\nassertTrue (e == nil, 'tonumber() should not convert strings containing letters out of the range of hexadecimal, with base 16')\nassertTrue (f == nil, 'tonumber() should not convert hexadecimal strings containing spaces in the middle with base 16')\nassertTrue (g == nil, 'tonumber() should not convert hexadecimal strings of floating point numbers at base 16')\nassertTrue (h == nil, 'tonumber() should not convert hexadecimal strings of exponential numbers at base 16')\n\n\nlocal a = tonumber ('')\nlocal b = tonumber ('', 2)\nlocal c = tonumber ('', 10)\nlocal d = tonumber ('', 16)\nassertTrue (a == nil, 'tonumber() should return nil with passed an empty string')\nassertTrue (b == nil, 'tonumber() should return nil with passed an empty string with base 2')\nassertTrue (c == nil, 'tonumber() should return nil with passed an empty string with base 10')\nassertTrue (d == nil, 'tonumber() should return nil with passed an empty string with base 16')\n\n\n\n\n-- tostring\n-- TODO Check for use of __tostring metamethod\n\nlocal a = tostring (123)\n--local b = tostring ({})\n--local c = tostring ({1, 2, 3})\n--local d = tostring (function () return true end)\n\nassertTrue (a == \"123\", 'tostring() should convert a number to a string')\n\n\n\n\n-- type\n\nlocal a = type (nil)\nlocal b = type (123)\nlocal c = type ('abc')\nlocal d = type (true)\nlocal e = type ({})\nlocal f = type (function () return true end)\n\nassertTrue (a == 'nil', 'type() should return \"nil\" for a variable with value of nil')\nassertTrue (b == 'number', 'type() should return \"number\" for a variable with value of number')\nassertTrue (c == 'string', 'type() should return \"string\" for a variable with value of type string')\nassertTrue (d == 'boolean', 'type() should return \"boolean\" for a variable with value of type boolean')\nassertTrue (e == 'table', 'type() should return \"table\" for a variable with value of type table')\nassertTrue (f == 'function', 'type() should return \"function\" for a variable with value of type function')\n\n\n\n-- unpack\ndo\n\tlocal a = {0, 1, 2, 4, 20, 50, 122}\n\t\n\tlocal b, c, d, e, f, g = unpack (a, 3);\n\tlocal h, i = unpack (a, 3, 2);\n\tlocal j, k, l, m = unpack (a, 3, 5);\n\t\n\tassertTrue (b == 2, 'unpack() should return the correct items of the given list [1]')\n\tassertTrue (c == 4, 'unpack() should return the correct items of the given list [2]')\n\tassertTrue (d == 20, 'unpack() should return the correct items of the given list [3]')\n\tassertTrue (e == 50, 'unpack() should return the correct items of the given list [4]')\n\tassertTrue (f == 122, 'unpack() should return the correct items of the given list [5]')\n\tassertTrue (g == nil, 'unpack() should return the correct items of the given list [6]')\n\tassertTrue (h == nil, 'unpack() should return the correct items of the given list [7]')\n\tassertTrue (i == nil, 'unpack() should return the correct items of the given list [8]')\n\tassertTrue (j == 2, 'unpack() should return the correct items of the given list [9]')\n\tassertTrue (k == 4, 'unpack() should return the correct items of the given list [10]')\n\tassertTrue (l == 20, 'unpack() should return the correct items of the given list [11]')\n\tassertTrue (m == nil, 'unpack() should return the correct items of the given list [12]')\n\t\n\t\n\tlocal a = {nil, nil, 180}\n\tlocal b, c, d, e = unpack (a);\n\tassertTrue (b == nil, 'unpack() should return the correct items of the given list [13]')\n\tassertTrue (c == nil, 'unpack() should return the correct items of the given list [14]')\n\tassertTrue (d == 180, 'unpack() should return the correct items of the given list [15]')\n\tassertTrue (e == nil, 'unpack() should return the correct items of the given list [16]')\n\t\n\t\n\t--Make sure binary searching is implemented the same way as Câ¦\n\tlocal table1 = {true, nil, true, false, nil, true, nil}\n\tlocal table2 = {true, false, nil, false, nil, true, nil}\n\tlocal table3 = {true, false, false, false, true, true, nil}\n\t\n\tlocal a1, b1, c1, d1, e1, f1 = unpack (table1);\n\tlocal a2, b2, c2, d2, e2, f2 = unpack (table2);\n\tlocal a3, b3, c3, d3, e3, f3, g3 = unpack (table3);\n\t\n\t\n\tassertTrue (a1, 'unpack() should return the same items as the C implementation [1]')\n\tassertTrue (b1 == nil, 'unpack() should return the same items as the C implementation [2]')\n\tassertTrue (c1, 'unpack() should return the same items as the C implementation [3]')\n\tassertTrue (not d1, 'unpack() should return the same items as the C implementation [4]')\n\tassertTrue (e1 == nil, 'unpack() should return the same items as the C implementation [5]')\n\tassertTrue (f1 == nil, 'unpack() should return the same items as the C implementation [6]')\n\tassertTrue (a2, 'unpack() should return the same items as the C implementation [7]')\n\tassertTrue (not b2, 'unpack() should return the same items as the C implementation [8]')\n\tassertTrue (c2 == nil, 'unpack() should return the same items as the C implementation [9]')\n\tassertTrue (d2 == nil, 'unpack() should return the same items as the C implementation [10]')\n\tassertTrue (e2 == nil, 'unpack() should return the same items as the C implementation [11]')\n\tassertTrue (f2 == nil, 'unpack() should return the same items as the C implementation [12]')\n\t\n\tassertTrue (a3, 'unpack() should return the same items as the C implementation [13]')\n\tassertTrue (not b3, 'unpack() should return the same items as the C implementation [14]')\n\tassertTrue (not c3, 'unpack() should return the same items as the C implementation [15]')\n\tassertTrue (not d3, 'unpack() should return the same items as the C implementation [16]')\n\tassertTrue (e3, 'unpack() should return the same items as the C implementation [17]')\n\tassertTrue (f3, 'unpack() should return the same items as the C implementation [18]')\n\tassertTrue (g3 == nil, 'unpack() should return the same items as the C implementation [19]')\nend\n\n\n\n-- _VERSION\n\nassertTrue (_VERSION == 'Lua 5.1', '_VERSION should be \"Lua 5.1\"')\n\n\n\n\n-- xpcall\n\nfunction goodfunc ()\n\treturn 10, \"win\"\nend\n\nfunction badfunc ()\n\terror ('I\\'m bad.')\nend \n\nfunction errfunc ()\n\treturn 999, \"fail\"\nend \n\na, b, c, d = xpcall (goodfunc, errfunc)\n\nassertTrue (a == true, 'xpcall() should return true in the first item when a function executes successfully')\nassertTrue (b == 10, 'xpcall() should return the result of the function in the items following the first item returned, when a function executes successfully [1]')\nassertTrue (c == 'win', 'xpcall() should return the result of the function in the items following the first item returned, when a function executes successfully [2]')\nassertTrue (d == nil, 'xpcall() should return the result of the function in the items following the first item returned, when a function executes successfully [3]')\n\na, b, c = xpcall (badfunc, errfunc)\n\nassertTrue (a == false, 'xpcall() should return false in the first item when the function errors during execution')\nassertTrue (b == 999, 'xpcall() should return the first item of the result of the error function in the second item returned, when the function errors during execution')\nassertTrue (c == nil, 'xpcall() should only return the first item of the result of the error function in the items following the first item returned, when the function errors during execution')\n\n\n\n\n\n-- STRING FUNCTIONS\n\n\n-- byte\n\nlocal a, b = string.byte ('Mo0')\n\nassertTrue (a == 77, 'string.byte() should return the numerical code for the first character in the first returned item')\nassertTrue (b == nil, 'string.byte() should return only one item when only no length is given [1]')\n\n\nlocal a, b = string.byte ('Mo0', 2)\n\nassertTrue (a == 111, 'string.byte() should return the numerical code for the nth character in the first returned item, when n is specified in the second argument [1]')\nassertTrue (b == nil, 'string.byte() should return only one item when only no length is given [2]')\n\n\nlocal a, b, c = string.byte ('Mo0', 2, 3)\n\nassertTrue (a == 111, 'string.byte() should return the numerical code for the nth character in the first returned item, when n is specified in the second argument [2]')\nassertTrue (b == 48, 'string.byte() should return the numerical code for the nth character in the first returned item, when n is specified in the second argument [3]')\nassertTrue (c == nil, 'string.byte() should return only the number of items specified in the length argument or the up to the end of the string, whichever is encountered first [1]')\n\n\nlocal a, b, c = string.byte ('Mo0', 3, 20)\n\nassertTrue (a == 48, 'string.byte() should return the numerical code for the nth character in the first returned item, when n is specified in the second argument [4]')\nassertTrue (b == nil, 'string.byte() should return only the number of items specified in the length argument or the up to the end of the string, whichever is encountered first [2]')\n\n\n\n\n-- char\n\nlocal a = string.char ()\nlocal b = string.char (116, 101, 115, 116, 105, 99, 108, 101, 115)\n\nassertTrue (a == '', 'string.byte() should return an empty string when called with no arguments')\nassertTrue (b == 'testicles', 'string.byte() should return a string comprising of characters representing by the value each of the arguments passed')\n\n\n\n\n-- find\n\nlocal a = 'The quick brown fox'\n\nlocal b = string.find (a, 'quick');\nlocal c = string.find (a, 'fox');\nlocal d = string.find (a, 'kipper');\nlocal e = string.find (a, '');\n\nlocal f = string.find (a, 'quick', 8);\nlocal g = string.find (a, 'fox', 8);\n\nassertTrue (b == 5, 'string.find() should return the location of the first occurrence of the second argument within the first, if it is present [1]')\nassertTrue (c == 17, 'string.find() should return the location of the first occurrence of the second argument within the first, if it is present [2]')\nassertTrue (d == nil, 'string.find() should return nil if the second argument is not contained within the first [1]')\nassertTrue (e == 1, 'string.find() should return return 1 if the second argument is an empty string')\nassertTrue (f == nil, 'string.find() should return nil if the second argument is not contained within the first after the index specified by the third argument')\nassertTrue (g == 17, 'string.find() should return the location of the second argument if it is contained within the first after the index specified by the third argument')\n\n\n\n\n-- gsub\n\na = '<%?xml version=\"1.0\" encoding=\"UTF%-8\"%?>'\nb = '<?xml version=\"1.0\" encoding=\"UTF-8\"?><my-xml></my-xml>'\n\nc = string.gsub (b, a, 'moo')\n\nassertTrue (c == 'moo<my-xml></my-xml>', 'string.gsub() should replace the matched part of the string[1]')\n-- Not even scraping the surface\n\na = '%%1'\nb = 'Hello %1'\n\nc = string.gsub (b, a, 'world')\nassertTrue (c == 'Hello world', 'string.gsub() should replace the matched part of the string[2]')\n\n\n\n-- len\n\nlocal a = 'McLaren Mercedes'\n\nlocal b = string.len ('');\nlocal c = string.len (a);\n\nassertTrue (b == 0, 'string.len() should return 0 if passed an empty string')\nassertTrue (c == 16, 'string.len() should return the length of the string in the first argument')\n\n\n\n\n\n-- lower\n\nlocal a = 'McLaren Mercedes'\n\nlocal b = string.lower ('');\nlocal c = string.lower (a);\n\nassertTrue (b == '', 'string.lower() should return an empty string if passed an empty string')\nassertTrue (c == 'mclaren mercedes', 'string.lower() should return the string in the first argument with all character in lower case')\n\n\n\n\n-- rep\n\nlocal a = 'Ho'\n\nlocal b = string.rep (a, 0);\nlocal c = string.rep (a, 1);\nlocal d = string.rep (a, 3);\n\nassertTrue (b == '', 'string.rep() should return an empty string if the second argument is 0')\nassertTrue (c == 'Ho', 'string.rep() should return the first argument if the second argument is 1')\nassertTrue (d == 'HoHoHo', 'string.rep() should return a string containing the first argument repeated the second argument number of times')\n\n\n\n\n-- reverse\n\nlocal a = string.reverse ('');\nlocal b = string.reverse ('x');\nlocal c = string.reverse ('tpircSavaJ');\n\nassertTrue (a == '', 'string.reverse() should return an empty string if passed an empty string')\nassertTrue (b == 'x', 'string.reverse() should return the first argument if its length is 1')\nassertTrue (c == 'JavaScript', 'string.reverse() should return a string containing the first argument reversed')\n\n\n\n\n-- sub\n\nlocal a = 'Pub Standards'\n\nlocal b = string.sub (a, 1)\nlocal c = string.sub (a, 5)\nlocal d = string.sub (a, -4)\n\nlocal e = string.sub (a, 1, 3)\nlocal f = string.sub (a, 7, 9)\nlocal g = string.sub (a, -4, -2)\n\nlocal h = string.sub (a, 5, -2)\nlocal i = string.sub (a, 0)\n\nassertTrue (b == 'Pub Standards', 'string.sub() should return the first argument if the second argument is 1')\nassertTrue (c == 'Standards', 'string.sub() should return a subset of the first argument from the nth character onwards, when n is the second argument and positive')\nassertTrue (d == 'ards', 'string.sub() should return the last n characters of the first argument, where n is the absolute value of the second argument and the second argument is negative')\nassertTrue (e == 'Pub', 'string.sub() should return the first n characters of the first argument when the second argument is one and n is the third argument')\nassertTrue (f == 'and', 'string.sub() should return a subset of the first argument from the nth character to the mth character, when n is the second argument and positive and m is the third argument and negative')\n\n\nassertTrue (h == 'Standard', 'string.sub() should return a subset of the first argument from the nth character to the last but mth character, when n is the second argument and positive and m is the third argument and negative')\nassertTrue (i == 'Pub Standards', 'string.sub() should return a subset of the first argument from the last but nth character to the last but mth character, when n is the second argument and negative and m is the third argument and negative')\n\n\n\n\n-- upper\n\nlocal a = string.upper ('');\nlocal b = string.upper ('JavaScript');\n\nassertTrue (a == '', 'string.upper() should return an empty string if passed an empty string')\nassertTrue (b == 'JAVASCRIPT', 'string.upper() should return the first argument in uppercase')\n\n\n\n\n\n\n-- TABLE FUNCTIONS\n\n\n-- concat\n\nlocal a = {2, 4, \"moo\", 102}\n\nlocal b = table.concat ({})\nlocal c = table.concat ({}, ':')\nlocal d = table.concat ({}, ', ', 3)\n--local e = table.concat ({}, ', ', 3, 4)\n\nlocal f = table.concat (a)\nlocal g = table.concat (a, '-')\nlocal h = table.concat (a, '..', 2)\nlocal i = table.concat (a, '+', 2, 3)\n\nassertTrue (b == '', 'table.concat() should return an empty string if passed an empty table [1]')\nassertTrue (c == '', 'table.concat() should return an empty string if passed an empty table [2]')\nassertTrue (d == '', 'table.concat() should return an empty string if passed an empty table [3]')\n--assertTrue (e == '', 'table.concat() should return an empty string if passed an empty table [4]')\n\nassertTrue (f == '24moo102', 'table.concat() should return all items in the table in argument 1 in a string with no spaces, when arguments 2 and 3 are absent')\nassertTrue (g == '2-4-moo-102', 'table.concat() should return return all items in the table in argument 1 in a string delimited by argument 2, when argument 3 is absent')\nassertTrue (h == '4..moo..102', 'table.concat() should return the items in the table in argument 1 from the nth index in a string delimited by argument 2, when n is the third argument')\nassertTrue (i == '4+moo', 'table.concat() should return the items in the table in argument 1 from the nth index to the mth index in a string delimited by argument 2, when n is the third argument and m is the forth argument')\n\n\n\n\n-- getn\ndo \n\tlocal a = {'a', 'b', 'c'}\n\tlocal b = {'a', 'b', 'c', nil}\n\tlocal c = {'a', nil, 'b', 'c'}\n\tlocal d = {'a', nil, 'b', 'c', nil}\n\tlocal e = {'a', 'b', 'c', moo = 123 }\n\tlocal f = { moo = 123 }\n\tlocal g = {}\n\t\n\tassertTrue (table.getn (a) == 3, 'table.getn() should return the size of the array part of a table')\n\tassertTrue (table.getn (b) == 3, 'table.getn() should ignore nils at the end of the array part of a table')\n\tassertTrue (table.getn (c) == 4, 'table.getn() should include nils in the middle of the array part of a table')\n\tassertTrue (table.getn (d) == 1, 'table.getn() should return the same random value as C implementation when the last item is nil')\n\tassertTrue (table.getn (e) == 3, 'table.getn() should ignore the hash part of a table')\n\tassertTrue (table.getn (f) == 0, 'table.getn() should return zero when the array part of a table is empty')\n\tassertTrue (table.getn (g) == 0, 'table.getn() should return zero when the table is empty')\nend\n\n\n\n\n-- insert\n\nlocal b = {}\nlocal w = table.insert (b, 'Lewis')\n\nlocal c = {}\nlocal x = table.insert (c, 3, 'Jenson')\n\nlocal d = {'We', 'exist', 'to'}\nlocal y = table.insert (d, 'win')\n\nlocal e = {1, 1998, 1, 1999}\nlocal z = table.insert (e, 3, 'Mika')\n\nlocal f = {'Kimi'}\nlocal z2 = table.insert (f, 4, 2)\n\nassertTrue (b[1] == 'Lewis', 'table.concat() should add argument 2 to the end of the table in argument 1, when the third argument is absent [1]')\nassertTrue (b[2] == nil, 'table.concat() should only add argument 2 to the end of the table in argument 1, when the third argument is absent [2]')\n\nassertTrue (c[1] == nil, 'table.concat() should pad the table with nils when the desired index is greater than the length of the table [1]')\nassertTrue (c[2] == nil, 'table.concat() should pad the table with nils when the desired index is greater than the length of the table [2]')\nassertTrue (c[3] == 'Jenson', 'table.concat() should add argument 2 to the end of the table in argument 1, when the third argument is greater than the length of the table [1]')\nassertTrue (c[4] == nil, 'table.concat() should only add argument 2 to the end of the table in argument 1, when the third argument is greater than the length of the table [2]')\n\nassertTrue (d[1] == 'We', 'table.concat()  should not affect existing items in the table when the third argument is missing [1]')\nassertTrue (d[2] == 'exist', 'table.concat() should not affect existing items in the table when the third argument is missing [2]')\nassertTrue (d[3] == 'to', 'table.concat() should not affect existing items in the table when the third argument is missing [3]')\nassertTrue (d[4] == 'win', 'table.concat() should add argument 2 to the end of the table in argument 1, when the third argument is missing [1]')\nassertTrue (d[5] == nil, 'table.concat() should only add argument 2 to the end of the table in argument 1, when the third argument is missing [2]')\n\nassertTrue (e[1] == 1, 'table.concat() should not affect existing items in the table at indices less than that specified in the third argument [1]')\nassertTrue (e[2] == 1998, 'table.concat() should not affect existing items in the table at indices less than that specified in the third argument [2]')\nassertTrue (e[3] == 'Mika', 'table.concat() should add argument 3 into the table in argument 1 at the index specified in argument 2')\nassertTrue (e[4] == 1, 'table.concat() should shift items in the table in argument 1 down by one after and including the index at argument 2 [1]')\nassertTrue (e[5] == 1999, 'table.concat() should shift items in the table in argument 1 down by one after and including the index at argument 2 [2]')\nassertTrue (e[6] == nil, 'table.concat() should only add one index to the table in argument 1 [1]')\n\nassertTrue (f[1] == 'Kimi', 'table.concat() should not affect existing items in the table at indices less than that specified in the third argument [3]')\nassertTrue (f[2] == nil, 'table.concat() should pad the table with nils when the desired index is greater than the length of the table [3]')\nassertTrue (f[3] == nil, 'table.concat() should pad the table with nils when the desired index is greater than the length of the table [4]')\nassertTrue (f[4] == 2, 'table.concat() should not affect existing items in the table at indices less than that specified in the third argument [2]')\nassertTrue (f[5] == nil, 'table.concat() should only add one index to the table in argument 1 [2]')\n\n\nassertTrue (w == nil, 'table.concat() should update list in place and return nil')\nassertTrue (x == nil, 'table.concat() should update list in place and return nil')\nassertTrue (y == nil, 'table.concat() should update list in place and return nil')\nassertTrue (z == nil, 'table.concat() should update list in place and return nil')\nassertTrue (z2 == nil, 'table.concat() should update list in place and return nil')\n\n\n\n\n-- maxn\n\nlocal a = table.maxn ({})\nlocal b = table.maxn ({1, 2, 4, 8})\nlocal c = table.maxn ({nil, nil, 123})\n\n\nlocal d = {}\ntable.insert (d, 3, 'Moo')\nlocal e = table.maxn (d)\n\nassertTrue (a == 0, 'table.maxn() should return zero when passed an empty table')\nassertTrue (b == 4, 'table.maxn() should return the highest index in the passed table [1]')\nassertTrue (c == 3, 'table.maxn() should return the highest index in the passed table [2]')\nassertTrue (e == 3, 'table.maxn() should return the highest index in the passed table [3]')\n\nassertTrue (#d == 0, 'Length operator should return the first empty index minus one [1]')\n\n\n\n\n-- remove\n\nlocal a = {14, 2, \"Hello\", 298}\nlocal b = table.remove (a)\n\nlocal c = {14, 2, \"Hello\", 298}\nlocal d = table.remove (c, 3)\n\nlocal e = {14, 2}\nlocal f = table.remove (e, 6)\n\nlocal g = table.remove ({}, 1)\n\nassertTrue (a[1] == 14, 'table.remove() should not affect items before the removed index [1]')\nassertTrue (a[2] == 2, 'table.remove() should not affect items before the removed index [2]')\nassertTrue (a[3] == \"Hello\", 'table.remove() should not affect items before the removed index [3]')\nassertTrue (a[4] == nil, 'table.remove() should remove the last item in the table when second argument is absent')\n\nassertTrue (b == 298, 'table.remove() should return the removed item [1]')\n\nassertTrue (c[1] == 14, 'table.remove() should not affect items before the removed index [3]')\nassertTrue (c[2] == 2, 'table.remove() should not affect items before the removed index [4]')\nassertTrue (c[3] == 298, 'table.remove() should remove the item at the index specified by the second argument and shift subsequent item down')\nassertTrue (c[4] == nil, 'table.remove() should decrease the length of the table by one')\n\nassertTrue (d == 'Hello', 'table.remove() should return the removed item [2]')\n\nassertTrue (e[1] == 14, 'table.remove() should not affect items before the removed index [5]')\nassertTrue (e[2] == 2, 'table.remove() should not affect items before the removed index [6]')\nassertTrue (e[3] == nil, 'table.remove() should not affect the table if the given index is past the length of the table')\n\nassertTrue (f == nil, 'table.remove() should return nil if the given index is past the length of the table [1]')\nassertTrue (g == nil, 'table.remove() should return nil if the given index is past the length of the table [2]')\n\n\nc = {nil, nil, 123}\nassertTrue (#c == 3, 'Length operator should return the first empty index minus one [2]')\n\ntable.remove (c, 1)\nassertTrue (#c == 0, 'Length operator should return the first empty index minus one [3]')\nassertTrue (c[1] == nil, 'table.remove() should shift values down if index <= initial length [1]')\nassertTrue (c[2] == 123, 'table.remove() should shift values down if index <= initial length [2]')\nassertTrue (c[3] == nil, 'table.remove() should shift values down if index <= initial length [3]')\n\ntable.remove (c, 1)\nassertTrue (#c == 0, 'Length operator should return the first empty index minus one [4]')\nassertTrue (c[1] == nil, 'table.remove() should not affect the array if index > initial length [1]')\nassertTrue (c[2] == 123, 'table.remove() should not affect the array if index > initial length [2]')\nassertTrue (c[3] == nil, 'table.remove() should not affect the array if index > initial length [3]')\n\ntable.remove (c, 2)\nassertTrue (#c == 0, 'Length operator should return the first empty index minus one [5]')\nassertTrue (c[1] == nil, 'table.remove() should not affect the array if index > initial length [4]')\nassertTrue (c[2] == 123, 'table.remove() should not affect the array if index > initial length [5]')\nassertTrue (c[3] == nil, 'table.remove() should not affect the array if index > initial length [6]')\n\n\n\n-- sort\n\nlocal a = { 1, 2, 3, 6, 5, 4, 20 }\ntable.sort (a)\n\nassertTrue (a[1] == 1, 'table.sort() should sort elements into alphnumeric order, when not passed a sort function [1]')\nassertTrue (a[2] == 2, 'table.sort() should sort elements into alphnumeric order, when not passed a sort function [2]')\nassertTrue (a[3] == 3, 'table.sort() should sort elements into alphnumeric order, when not passed a sort function [3]')\nassertTrue (a[4] == 4, 'table.sort() should sort elements into alphnumeric order, when not passed a sort function [4]')\nassertTrue (a[5] == 5, 'table.sort() should sort elements into alphnumeric order, when not passed a sort function [5]')\nassertTrue (a[6] == 6, 'table.sort() should sort elements into alphnumeric order, when not passed a sort function [6]')\nassertTrue (a[7] == 20, 'table.sort() should sort elements into alphnumeric order, when not passed a sort function [7]')\nassertTrue (a[8] == nil, 'table.sort() should not affect the table if the given index is past the length of the table')\n\n\nlocal a = { 1, 2, 3, 6, 5, 4, 20 }\ntable.sort (a, function (a, b) return b < a end)\n\nassertTrue (a[1] == 20, 'table.sort() should sort elements into order defined by sort function [1]')\nassertTrue (a[2] == 6, 'table.sort() should sort elements into order defined by sort function [2]')\nassertTrue (a[3] == 5, 'table.sort() should sort elements into order defined by sort function [3]')\nassertTrue (a[4] == 4, 'table.sort() should sort elements into order defined by sort function [4]')\nassertTrue (a[5] == 3, 'table.sort() should sort elements into order defined by sort function [5]')\nassertTrue (a[6] == 2, 'table.sort() should sort elements into order defined by sort function [6]')\nassertTrue (a[7] == 1, 'table.sort() should sort elements into order defined by sort function [7]')\nassertTrue (a[8] == nil, 'table.sort() should not affect the table if the given index is past the length of the table')\n\n\n\n\n\n\n-- MATHS FUNCTIONS\n\n\n-- abs\n\nlocal a = math.abs (10)\nlocal b = math.abs (-20)\nlocal c = math.abs (2.56)\nlocal d = math.abs (-34.67)\nlocal e = math.abs (-0)\n\nassertTrue (a == 10, 'math.abs() should return the passed argument if it is positive')\nassertTrue (b == 20, 'math.abs() should return the positive form of the passed argument if it is negative')\nassertTrue (c == 2.56, 'math.abs() should return the passed argument if it is a positive floating point number')\nassertTrue (d == 34.67, 'math.abs() should return the positive form of the passed argument if it is a positive floating point number')\nassertTrue (e == 0, 'math.abs() should return zero if passed zero')\n\n\n\n\n-- math.acos\n-- math.cos\n\n\nlocal a = math.acos (1)\n--local b = math.acos (math.cos (0.3))\nlocal c = math.cos (0)\n--local d = math.cos (math.acos (0.3))\n\nassertTrue (a == 0, 'math.acos() should return 0 when passed 1')\n--assertTrue (b == 0.3, 'math.acos() should return x when passed math.cos(x)')\nassertTrue (c == 1, 'math.cos() should return 1 when passed 0')\n--assertTrue (d == 0.3, 'math.cos() should return x when passed math.acos(x)')\n\n\n\n\n-- math.asin\n-- math.sin\n\n\nlocal a = math.asin (0)\n--local b = math.asin (math.sin (90))\nlocal c = math.sin (0)\nlocal d = math.sin (math.asin (0.3))\n\nassertTrue (a == 0, 'math.asin() should return 0 when passed 0')\n--assertTrue (b == 90, 'math.asin() should return x when passed math.sin(x)')\nassertTrue (c == 0, 'math.sin() should return 0 when passed 0')\nassertTrue (d == 0.3, 'math.sin() should return x when passed math.asin(x)')\n\n\n\n\n-- math.atan\n-- math.tan\n\n\nlocal a = math.atan (0)\n--local b = math.atan (math.tan (0.3))\nlocal c = math.tan (0)\nlocal d = math.tan (math.atan (0.3))\n\nassertTrue (a == 0, 'math.atan() should return 0 when passed 0')\n--assertTrue (b == 0.3, 'math.atan() should return x when passed math.tan(x)')\nassertTrue (c == 0, 'math.tan() should return 0 when passed 0')\nassertTrue (d == 0.3, 'math.tan() should return x when passed math.atan(x)')\n\n\n\n\n-- math.ceil\n\nlocal a = math.ceil (14)\nlocal b = math.ceil (14.45)\nlocal c = math.ceil (14.5)\nlocal d = math.ceil (0.1)\nlocal e = math.ceil (0.6)\nlocal f = math.ceil (-0.6)\nlocal g = math.ceil (-122.4)\n\nassertTrue (a == 14, 'math.ceil() should round up to the next integer')\nassertTrue (b == 15, 'math.ceil() should round up to the next integer')\nassertTrue (c == 15, 'math.ceil() should round up to the next integer')\nassertTrue (d == 1, 'math.ceil() should round up to the next integer')\nassertTrue (e == 1, 'math.ceil() should round up to the next integer')\nassertTrue (f == 0, 'math.ceil() should round up to the next integer')\nassertTrue (g == -122, 'math.ceil() should round up to the next integer')\n\n\n\n\n\n\n-- Arithmetic metamethods\n\nlocal mt = {}\nlocal Obj = {}\n\nfunction Obj.new (v) \n\tlocal self = { ['value'] = v }\n\tsetmetatable (self, mt);\n\treturn self\nend\n\nlocal o = Obj.new (3);\nlocal p = Obj.new (5);\nlocal x = { value = 'moo' }\n\n\n-- __add\n\nmt.__add = function (a, b)\n\treturn a.value..'(__add)'..b.value\nend\n\nassertTrue (o + p == '3(__add)5', 'Add operator should use __add metamethod, if provided [1]')\nassertTrue (o + x == '3(__add)moo', 'Add operator should use __add metamethod, if provided [2]')\nassertTrue (x + p == 'moo(__add)5', 'Add operator should use __add metamethod, if provided [3]')\n\n\n\n\n-- __concat\n\nmt.__concat = function (a, b)\n\treturn a.value..'(__concat)'..b.value\nend\nassertTrue (o..p == '3(__concat)5', 'Concatenation operator should use __concat metamethod, if provided [1]')\nassertTrue (o..x == '3(__concat)moo', 'Concatenation operator should use __concat metamethod, if provided [2]')\nassertTrue (x..p == 'moo(__concat)5', 'Concatenation operator should use __concat metamethod, if provided [3]')\n\n\n\n\n-- __div\n\nmt.__div = function (a, b)\n\treturn a.value..'(__div)'..b.value\nend\n\nassertTrue (o / p == '3(__div)5', 'Divide operator should use __div metamethod, if provided [1]')\nassertTrue (o / x == '3(__div)moo', 'Divide operator should use __div metamethod, if provided [2]')\nassertTrue (x / p == 'moo(__div)5', 'Divide operator should use __div metamethod, if provided [3]')\n\n\n\n\n-- __mod\n\nmt.__mod = function (a, b)\n\treturn a.value..'(__mod)'..b.value\nend\n\nassertTrue (o % p == '3(__mod)5', 'Modulo operator should use __mod metamethod, if provided [1]')\nassertTrue (o % x == '3(__mod)moo', 'Modulo operator should use __mod metamethod, if provided [2]')\nassertTrue (x % p == 'moo(__mod)5', 'Modulo operator should use __mod metamethod, if provided [3]')\n\n\n\n\n-- __mul\n\nmt.__mul = function (a, b)\n\treturn a.value..'(__mul)'..b.value\nend\n\nassertTrue (o * p == '3(__mul)5', 'Muliplication operator should use __mul metamethod, if provided [1]')\nassertTrue (o * x == '3(__mul)moo', 'Muliplication operator should use __mul metamethod, if provided [2]')\nassertTrue (x * p == 'moo(__mul)5', 'Muliplication operator should use __mul metamethod, if provided [3]')\n\n\n\n\n-- __pow\n\nmt.__pow = function (a, b)\n\treturn a.value..'(__pow)'..b.value\nend\n\nassertTrue (o ^ p == '3(__pow)5', 'Exponentiation operator should use __pow metamethod, if provided [1]')\nassertTrue (o ^ x == '3(__pow)moo', 'Exponentiation operator should use __pow metamethod, if provided [2]')\nassertTrue (x ^ p == 'moo(__pow)5', 'Exponentiation operator should use __pow metamethod, if provided [3]')\n\n\n\n\n-- __sub\n\nmt.__sub = function (a, b)\n\treturn a.value..'(__sub)'..b.value\nend\n\nassertTrue (o - p == '3(__sub)5', 'Subtraction operator should use __sub metamethod, if provided [1]')\nassertTrue (o - x == '3(__sub)moo', 'Subtraction operator should use __sub metamethod, if provided [2]')\nassertTrue (x - p == 'moo(__sub)5', 'Subtraction operator should use __sub metamethod, if provided [3]')\n\n\n\n\n-- __unm\n\nmt.__unm = function (a)\n\treturn '(__unm)'..a.value\nend\n\nassertTrue (-o == '(__unm)3', 'Negation operator should use __unm metamethod, if provided')\n\n\n\n\n\n\n\n\n-- Relational metamethods\n\n\n-- __eq\nlocal x = 0\n\nmt.__eq = function (a, b)\n\tx = x + 1\n\treturn true\nend\n\nassertTrue (o == p, 'Equality operator should use __eq metamethod, if provided [1]')\nassertTrue (x == 1, 'Equality operator should use __eq metamethod, if provided [2]')\n\nassertTrue (not (o == 123), 'Equality operator should not use __eq metamethod if objects are of different type [1]')\nassertTrue (x == 1, 'Equality operator should not use __eq metamethod if operands are of different type [2]')\n\nassertTrue (o == o, 'Equality operator should not use __eq metamethod if the operands are the same object [1]')\nassertTrue (x == 1, 'Equality operator should not use __eq metamethod if the operands are the same object [2]')\n\n\n\n\n-- __le\n\nx = 0\n\nmt.__le = function (a, b)\n\tx = x + 1\n\treturn a.value == 3\nend\n\nassertTrue (o <= p, 'Less than or equal to operator should use __le metamethod, if provided [1]')\nassertTrue (x == 1, 'Less than or equal to operator should use __le metamethod, if provided [2]')\nassertTrue (not (p <= o), 'Less than or equal to operator should use __le metamethod, if provided [3]')\nassertTrue (x == 2, 'Less than or equal to operator should use __le metamethod, if provided [4]')\n\n\n\n\n-- __lt\n\nx = 0\n\nmt.__lt = function (a, b)\n\tx = x + 1\n\treturn a.value == 3\nend\n\nassertTrue (o < p, 'Less than operator should use __le metamethod, if provided [1]')\nassertTrue (x == 1, 'Less than operator should use __le metamethod, if provided [2]')\nassertTrue (not (p < o), 'Less than operator should use __le metamethod, if provided [3]')\nassertTrue (x == 2, 'Less than operator should use __le metamethod, if provided [4]')\n\n\n\n-- __call\n\nx = ''\nmt.__concat = nil\n\nmt.__call = function (p1, p2)\n\tif p1 == o then \n\t\tx = 'Ron ' \n\tend\n\t\n\tx = x .. p2\n\treturn 'CEO'\nend\n\ny = o('Dennis')\n\nassertTrue (x == 'Ron Dennis', 'When executing a table, __call metamethod should be used, if provided')\nassertTrue (y == 'CEO', 'When executing a table with a __call metamethod, the return value(s) of __call function should be returned')\n\n\n\n-- TYPE ERRORS\n\nfunction conc (a, b)\n\treturn a..b\nend\n\na = pcall (conc, 'a', 'b')\nb = pcall (conc, 'a', 44)\nc = pcall (conc, 55, 'b')\nd = pcall (conc, 55, 44)\ne = pcall (conc, 'a', {})\nf = pcall (conc, {}, 'b')\ng = pcall (conc, 'a', os.date)\n\nassertTrue (a, 'Concatenation should not error with two strings')\nassertTrue (b, 'Concatenation should not error with a string and a number')\nassertTrue (c, 'Concatenation should not error with a number and a string')\nassertTrue (d, 'Concatenation should not error with two numbers')\nassertTrue (not (e), 'Concatenation should error with a string and a table')\nassertTrue (not (f), 'Concatenation should error with a table and a string')\nassertTrue (not (g), 'Concatenation should error with a string and a function')\n\n\nfunction add (a, b)\n\treturn a + b\nend\n\na = pcall (add, 'a', 'b')\nb = pcall (add, 'a', 44)\nc = pcall (add, 55, 'b')\nd = pcall (add, 55, 44)\ne = pcall (add, 'a', {})\nf = pcall (add, {}, 'b')\ng = pcall (add, 'a', os.date)\n\nassertTrue (not (a), 'Addition operator should error with two strings')\nassertTrue (not (b), 'Addition operator should error with a string and a number')\nassertTrue (not (c), 'Addition operator should error with a number and a string')\nassertTrue (d, 'Addition operator should not error with two numbers')\nassertTrue (not (e), 'Addition operator should error with a string and a table')\nassertTrue (not (f), 'Addition operator should error with a table and a string')\nassertTrue (not (g), 'Addition operator should error with a string and a function')\n\n\nfunction sub (a, b)\n\treturn a - b\nend\n\na = pcall (sub, 'a', 'b')\nb = pcall (sub, 'a', 44)\nc = pcall (sub, 55, 'b')\nd = pcall (sub, 55, 44)\ne = pcall (sub, 'a', {})\nf = pcall (sub, {}, 'b')\ng = pcall (sub, 'a', os.date)\n\nassertTrue (not (a), 'Subtraction operator should error with two strings')\nassertTrue (not (b), 'Subtraction operator should error with a string and a number')\nassertTrue (not (c), 'Subtraction operator should error with a number and a string')\nassertTrue (d, 'Subtraction operator should not error with two numbers')\nassertTrue (not (e), 'Subtraction operator should error with a string and a table')\nassertTrue (not (f), 'Subtraction operator should error with a table and a string')\nassertTrue (not (g), 'Subtraction operator should error with a string and a function')\n\n\nfunction mult (a, b)\n\treturn a * b\nend\n\na = pcall (mult, 'a', 'b')\nb = pcall (mult, 'a', 44)\nc = pcall (mult, 55, 'b')\nd = pcall (mult, 55, 44)\ne = pcall (mult, 'a', {})\nf = pcall (mult, {}, 'b')\ng = pcall (mult, 'a', os.date)\n\nassertTrue (not (a), 'Multiplication operator should error with two strings')\nassertTrue (not (b), 'Multiplication operator should error with a string and a number')\nassertTrue (not (c), 'Multiplication operator should error with a number and a string')\nassertTrue (d, 'Multiplication operator should not error with two numbers')\nassertTrue (not (e), 'Multiplication operator should error with a string and a table')\nassertTrue (not (f), 'Multiplication operator should error with a table and a string')\nassertTrue (not (g), 'Multiplication operator should error with a string and a function')\n\n\nfunction divide (a, b)\n\treturn a / b\nend\n\na = pcall (divide, 'a', 'b')\nb = pcall (divide, 'a', 44)\nc = pcall (divide, 55, 'b')\nd = pcall (divide, 55, 44)\ne = pcall (divide, 'a', {})\nf = pcall (divide, {}, 'b')\ng = pcall (divide, 'a', os.date)\n\nassertTrue (not (a), 'Division operator should error with two strings')\nassertTrue (not (b), 'Division operator should error with a string and a number')\nassertTrue (not (c), 'Division operator should error with a number and a string')\nassertTrue (d, 'Division operator should not error with two numbers')\nassertTrue (not (e), 'Division operator should error with a string and a table')\nassertTrue (not (f), 'Division operator should error with a table and a string')\nassertTrue (not (g), 'Division operator should error with a string and a function')\n\n\nfunction modu (a, b)\n\treturn a % b\nend\n\na = pcall (modu, 'a', 'b')\nb = pcall (modu, 'a', 44)\nc = pcall (modu, 55, 'b')\nd = pcall (modu, 55, 44)\ne = pcall (modu, 'a', {})\nf = pcall (modu, {}, 'b')\ng = pcall (modu, 'a', os.date)\n\nassertTrue (not (a), 'Modulo operator should error with two strings')\nassertTrue (not (b), 'Modulo operator should error with a string and a number')\nassertTrue (not (c), 'Modulo operator should error with a number and a string')\nassertTrue (d, 'Modulo operator should not error with two numbers')\nassertTrue (not (e), 'Modulo operator should error with a string and a table')\nassertTrue (not (f), 'Modulo operator should error with a table and a string')\nassertTrue (not (g), 'Modulo operator should error with a string and a function')\n\n\nfunction power (a, b)\n\treturn a ^ b\nend\n\na = pcall (power, 'a', 'b')\nb = pcall (power, 'a', 44)\nc = pcall (power, 55, 'b')\nd = pcall (power, 55, 44)\ne = pcall (power, 'a', {})\nf = pcall (power, {}, 'b')\ng = pcall (power, 'a', os.date)\n\nassertTrue (not (a), 'Exponentiation operator should error with two strings')\nassertTrue (not (b), 'Exponentiation operator should error with a string and a number')\nassertTrue (not (c), 'Exponentiation operator should error with a number and a string')\nassertTrue (d, 'Exponentiation operator should not error with two numbers')\nassertTrue (not (e), 'Exponentiation operator should error with a string and a table')\nassertTrue (not (f), 'Exponentiation operator should error with a table and a string')\nassertTrue (not (g), 'Exponentiation operator should error with a string and a function')\n\n\nfunction neg (a)\n\treturn -a\nend\n\na = pcall (neg, 'a')\nb = pcall (neg, 55)\nc = pcall (neg, {})\n\nassertTrue (not (a), 'Negation operator should error when passed a string')\nassertTrue (b, 'Negation operator should not error when passed a number')\nassertTrue (not (c), 'Negation operator should error when passed a table')\n\n\n\n\n\n\n\nlocal datetest = function ()\n\n\t--[[\n\tlocal dates = {{1, 1}, {1, 2}, {28, 2}, {29, 2}, {1, 3}, {31, 12}}\n\tlocal years = {1999, 2000, 2011}\n\tlocal symbols = {'%a', '%A', '%b', '%B', '%d', '%H', '%I', '%j', '%m', '%M', '%p', '%S', '%U', '%w', '%W', '%x', '%X', '%y', '%Y', '%Z', '%%', '!%a', '!%A', '!%b', '!%B', '!%d', '!%H', '!%I', '!%j', '!%m', '!%M', '!%p', '!%S', '!%U', '!%w', '!%W', '!%x', '!%X', '!%y', '!%Y', '!%Z'}\n\tlocal index = 0\n\n\tfor _, year in pairs (years) do\n\t\tfor _, date in pairs (dates) do\n\t\t\tlocal time = os.time {\n\t\t\t\tyear = year,\n\t\t\t\tmonth = date[2],\n\t\t\t\tday = date[1],\n\t\t\t\thour = date[2]\n\t\t\t}\n\n\t\t\tprint ('\\nlocal time = '..time..'\\n')\n\t\t\n\t\t\tfor _, symbol in pairs (symbols) do\n\t\t\t\tindex = index + 1\t\t\t\n\t\t\t\tprint (\"assertTrue (os.date ('\"..symbol..\"', time) == '\"..os.date (symbol, time)..\"', 'os.date() did not return expected value when passed \\\"\"..symbol..\"\\\" [\"..index..\"]')\")\n\t\t\tend\n\t\t\n\t\t\tlocal data = os.date ('*t', time)\n\t\t\tfor key, value in pairs (data) do\n\t\t\t\tindex = index + 1\n\t\t\t\n\t\t\t\tlocal val = tostring (value)\n\t\t\t\tif type (value) == 'string' then val = \"'\"..val..\"'\" end\n\t\t\t\t\n\t\t\t\tprint (\"assertTrue (os.date ('*t', time).\"..key..\" == \"..val..\", 'os.date() did not return expected value when passed \\\"*t\\\" [\"..index..\"]')\")\n\t\t\tend\n\t\t\n\t\t\tlocal data = os.date ('!*t', time)\n\t\t\tfor key, value in pairs (data) do\n\t\t\t\tindex = index + 1\n\t\t\t\n\t\t\t\tlocal val = tostring (value)\n\t\t\t\tif type (value) == 'string' then val = \"'\"..val..\"'\" end\n\t\t\t\t\n\t\t\t\tprint (\"assertTrue (os.date ('!*t', time).\"..key..\" == \"..val..\", 'os.date() did not return expected value when passed \\\"!*t\\\" [\"..index..\"]')\")\n\t\t\tend\n\t\t\n\t\t\n\t\tend\n\tend\n\t--]]\n\n\n\tlocal time = 915152400\n\n\tassertTrue (os.date ('%a', time) == 'Fri', 'os.date() did not return expected value when passed \"%a\" [1]')\n\tassertTrue (os.date ('%A', time) == 'Friday', 'os.date() did not return expected value when passed \"%A\" [2]')\n\tassertTrue (os.date ('%b', time) == 'Jan', 'os.date() did not return expected value when passed \"%b\" [3]')\n\tassertTrue (os.date ('%B', time) == 'January', 'os.date() did not return expected value when passed \"%B\" [4]')\n\tassertTrue (os.date ('%d', time) == '01', 'os.date() did not return expected value when passed \"%d\" [5]')\n\tassertTrue (os.date ('%H', time) == '01', 'os.date() did not return expected value when passed \"%H\" [6]')\n\tassertTrue (os.date ('%I', time) == '01', 'os.date() did not return expected value when passed \"%I\" [7]')\n\tassertTrue (os.date ('%j', time) == '001', 'os.date() did not return expected value when passed \"%j\" [8]')\n\tassertTrue (os.date ('%m', time) == '01', 'os.date() did not return expected value when passed \"%m\" [9]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [10]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [11]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [12]')\n\tassertTrue (os.date ('%U', time) == '00', 'os.date() did not return expected value when passed \"%U\" [13]')\n\tassertTrue (os.date ('%w', time) == '5', 'os.date() did not return expected value when passed \"%w\" [14]')\n\tassertTrue (os.date ('%W', time) == '00', 'os.date() did not return expected value when passed \"%W\" [15]')\n\tassertTrue (os.date ('%x', time) == '01/01/99', 'os.date() did not return expected value when passed \"%x\" [16]')\n\tassertTrue (os.date ('%X', time) == '01:00:00', 'os.date() did not return expected value when passed \"%X\" [17]')\n\tassertTrue (os.date ('%y', time) == '99', 'os.date() did not return expected value when passed \"%y\" [18]')\n\tassertTrue (os.date ('%Y', time) == '1999', 'os.date() did not return expected value when passed \"%Y\" [19]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [20]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [21]')\n\tassertTrue (os.date ('!%a', time) == 'Fri', 'os.date() did not return expected value when passed \"!%a\" [22]')\n\tassertTrue (os.date ('!%A', time) == 'Friday', 'os.date() did not return expected value when passed \"!%A\" [23]')\n\tassertTrue (os.date ('!%b', time) == 'Jan', 'os.date() did not return expected value when passed \"!%b\" [24]')\n\tassertTrue (os.date ('!%B', time) == 'January', 'os.date() did not return expected value when passed \"!%B\" [25]')\n\tassertTrue (os.date ('!%d', time) == '01', 'os.date() did not return expected value when passed \"!%d\" [26]')\n\tassertTrue (os.date ('!%H', time) == '01', 'os.date() did not return expected value when passed \"!%H\" [27]')\n\tassertTrue (os.date ('!%I', time) == '01', 'os.date() did not return expected value when passed \"!%I\" [28]')\n\tassertTrue (os.date ('!%j', time) == '001', 'os.date() did not return expected value when passed \"!%j\" [29]')\n\tassertTrue (os.date ('!%m', time) == '01', 'os.date() did not return expected value when passed \"!%m\" [30]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [31]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [32]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [33]')\n\tassertTrue (os.date ('!%U', time) == '00', 'os.date() did not return expected value when passed \"!%U\" [34]')\n\tassertTrue (os.date ('!%w', time) == '5', 'os.date() did not return expected value when passed \"!%w\" [35]')\n\tassertTrue (os.date ('!%W', time) == '00', 'os.date() did not return expected value when passed \"!%W\" [36]')\n\tassertTrue (os.date ('!%x', time) == '01/01/99', 'os.date() did not return expected value when passed \"!%x\" [37]')\n\tassertTrue (os.date ('!%X', time) == '01:00:00', 'os.date() did not return expected value when passed \"!%X\" [38]')\n\tassertTrue (os.date ('!%y', time) == '99', 'os.date() did not return expected value when passed \"!%y\" [39]')\n\tassertTrue (os.date ('!%Y', time) == '1999', 'os.date() did not return expected value when passed \"!%Y\" [40]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [41]')\n\tassertTrue (os.date ('*t', time).hour == 1, 'os.date() did not return expected value when passed \"*t\" [42]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [43]')\n\tassertTrue (os.date ('*t', time).wday == 6, 'os.date() did not return expected value when passed \"*t\" [44]')\n\tassertTrue (os.date ('*t', time).day == 1, 'os.date() did not return expected value when passed \"*t\" [45]')\n\tassertTrue (os.date ('*t', time).month == 1, 'os.date() did not return expected value when passed \"*t\" [46]')\n\tassertTrue (os.date ('*t', time).year == 1999, 'os.date() did not return expected value when passed \"*t\" [47]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [48]')\n\tassertTrue (os.date ('*t', time).yday == 1, 'os.date() did not return expected value when passed \"*t\" [49]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [50]')\n\tassertTrue (os.date ('!*t', time).hour == 1, 'os.date() did not return expected value when passed \"!*t\" [51]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [52]')\n\tassertTrue (os.date ('!*t', time).wday == 6, 'os.date() did not return expected value when passed \"!*t\" [53]')\n\tassertTrue (os.date ('!*t', time).day == 1, 'os.date() did not return expected value when passed \"!*t\" [54]')\n\tassertTrue (os.date ('!*t', time).month == 1, 'os.date() did not return expected value when passed \"!*t\" [55]')\n\tassertTrue (os.date ('!*t', time).year == 1999, 'os.date() did not return expected value when passed \"!*t\" [56]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [57]')\n\tassertTrue (os.date ('!*t', time).yday == 1, 'os.date() did not return expected value when passed \"!*t\" [58]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [59]')\n\n\tlocal time = 917834400\n\n\tassertTrue (os.date ('%a', time) == 'Mon', 'os.date() did not return expected value when passed \"%a\" [60]')\n\tassertTrue (os.date ('%A', time) == 'Monday', 'os.date() did not return expected value when passed \"%A\" [61]')\n\tassertTrue (os.date ('%b', time) == 'Feb', 'os.date() did not return expected value when passed \"%b\" [62]')\n\tassertTrue (os.date ('%B', time) == 'February', 'os.date() did not return expected value when passed \"%B\" [63]')\n\tassertTrue (os.date ('%d', time) == '01', 'os.date() did not return expected value when passed \"%d\" [64]')\n\tassertTrue (os.date ('%H', time) == '02', 'os.date() did not return expected value when passed \"%H\" [65]')\n\tassertTrue (os.date ('%I', time) == '02', 'os.date() did not return expected value when passed \"%I\" [66]')\n\tassertTrue (os.date ('%j', time) == '032', 'os.date() did not return expected value when passed \"%j\" [67]')\n\tassertTrue (os.date ('%m', time) == '02', 'os.date() did not return expected value when passed \"%m\" [68]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [69]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [70]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [71]')\n\tassertTrue (os.date ('%U', time) == '05', 'os.date() did not return expected value when passed \"%U\" [72]')\n\tassertTrue (os.date ('%w', time) == '1', 'os.date() did not return expected value when passed \"%w\" [73]')\n\tassertTrue (os.date ('%W', time) == '05', 'os.date() did not return expected value when passed \"%W\" [74]')\n\tassertTrue (os.date ('%x', time) == '02/01/99', 'os.date() did not return expected value when passed \"%x\" [75]')\n\tassertTrue (os.date ('%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"%X\" [76]')\n\tassertTrue (os.date ('%y', time) == '99', 'os.date() did not return expected value when passed \"%y\" [77]')\n\tassertTrue (os.date ('%Y', time) == '1999', 'os.date() did not return expected value when passed \"%Y\" [78]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [79]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [80]')\n\tassertTrue (os.date ('!%a', time) == 'Mon', 'os.date() did not return expected value when passed \"!%a\" [81]')\n\tassertTrue (os.date ('!%A', time) == 'Monday', 'os.date() did not return expected value when passed \"!%A\" [82]')\n\tassertTrue (os.date ('!%b', time) == 'Feb', 'os.date() did not return expected value when passed \"!%b\" [83]')\n\tassertTrue (os.date ('!%B', time) == 'February', 'os.date() did not return expected value when passed \"!%B\" [84]')\n\tassertTrue (os.date ('!%d', time) == '01', 'os.date() did not return expected value when passed \"!%d\" [85]')\n\tassertTrue (os.date ('!%H', time) == '02', 'os.date() did not return expected value when passed \"!%H\" [86]')\n\tassertTrue (os.date ('!%I', time) == '02', 'os.date() did not return expected value when passed \"!%I\" [87]')\n\tassertTrue (os.date ('!%j', time) == '032', 'os.date() did not return expected value when passed \"!%j\" [88]')\n\tassertTrue (os.date ('!%m', time) == '02', 'os.date() did not return expected value when passed \"!%m\" [89]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [90]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [91]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [92]')\n\tassertTrue (os.date ('!%U', time) == '05', 'os.date() did not return expected value when passed \"!%U\" [93]')\n\tassertTrue (os.date ('!%w', time) == '1', 'os.date() did not return expected value when passed \"!%w\" [94]')\n\tassertTrue (os.date ('!%W', time) == '05', 'os.date() did not return expected value when passed \"!%W\" [95]')\n\tassertTrue (os.date ('!%x', time) == '02/01/99', 'os.date() did not return expected value when passed \"!%x\" [96]')\n\tassertTrue (os.date ('!%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"!%X\" [97]')\n\tassertTrue (os.date ('!%y', time) == '99', 'os.date() did not return expected value when passed \"!%y\" [98]')\n\tassertTrue (os.date ('!%Y', time) == '1999', 'os.date() did not return expected value when passed \"!%Y\" [99]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [100]')\n\tassertTrue (os.date ('*t', time).hour == 2, 'os.date() did not return expected value when passed \"*t\" [101]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [102]')\n\tassertTrue (os.date ('*t', time).wday == 2, 'os.date() did not return expected value when passed \"*t\" [103]')\n\tassertTrue (os.date ('*t', time).day == 1, 'os.date() did not return expected value when passed \"*t\" [104]')\n\tassertTrue (os.date ('*t', time).month == 2, 'os.date() did not return expected value when passed \"*t\" [105]')\n\tassertTrue (os.date ('*t', time).year == 1999, 'os.date() did not return expected value when passed \"*t\" [106]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [107]')\n\tassertTrue (os.date ('*t', time).yday == 32, 'os.date() did not return expected value when passed \"*t\" [108]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [109]')\n\tassertTrue (os.date ('!*t', time).hour == 2, 'os.date() did not return expected value when passed \"!*t\" [110]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [111]')\n\tassertTrue (os.date ('!*t', time).wday == 2, 'os.date() did not return expected value when passed \"!*t\" [112]')\n\tassertTrue (os.date ('!*t', time).day == 1, 'os.date() did not return expected value when passed \"!*t\" [113]')\n\tassertTrue (os.date ('!*t', time).month == 2, 'os.date() did not return expected value when passed \"!*t\" [114]')\n\tassertTrue (os.date ('!*t', time).year == 1999, 'os.date() did not return expected value when passed \"!*t\" [115]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [116]')\n\tassertTrue (os.date ('!*t', time).yday == 32, 'os.date() did not return expected value when passed \"!*t\" [117]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [118]')\n\n\tlocal time = 920167200\n\n\tassertTrue (os.date ('%a', time) == 'Sun', 'os.date() did not return expected value when passed \"%a\" [119]')\n\tassertTrue (os.date ('%A', time) == 'Sunday', 'os.date() did not return expected value when passed \"%A\" [120]')\n\tassertTrue (os.date ('%b', time) == 'Feb', 'os.date() did not return expected value when passed \"%b\" [121]')\n\tassertTrue (os.date ('%B', time) == 'February', 'os.date() did not return expected value when passed \"%B\" [122]')\n\tassertTrue (os.date ('%d', time) == '28', 'os.date() did not return expected value when passed \"%d\" [123]')\n\tassertTrue (os.date ('%H', time) == '02', 'os.date() did not return expected value when passed \"%H\" [124]')\n\tassertTrue (os.date ('%I', time) == '02', 'os.date() did not return expected value when passed \"%I\" [125]')\n\tassertTrue (os.date ('%j', time) == '059', 'os.date() did not return expected value when passed \"%j\" [126]')\n\tassertTrue (os.date ('%m', time) == '02', 'os.date() did not return expected value when passed \"%m\" [127]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [128]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [129]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [130]')\n\tassertTrue (os.date ('%U', time) == '09', 'os.date() did not return expected value when passed \"%U\" [131]')\n\tassertTrue (os.date ('%w', time) == '0', 'os.date() did not return expected value when passed \"%w\" [132]')\n\tassertTrue (os.date ('%W', time) == '08', 'os.date() did not return expected value when passed \"%W\" [133]')\n\tassertTrue (os.date ('%x', time) == '02/28/99', 'os.date() did not return expected value when passed \"%x\" [134]')\n\tassertTrue (os.date ('%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"%X\" [135]')\n\tassertTrue (os.date ('%y', time) == '99', 'os.date() did not return expected value when passed \"%y\" [136]')\n\tassertTrue (os.date ('%Y', time) == '1999', 'os.date() did not return expected value when passed \"%Y\" [137]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [138]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [139]')\n\tassertTrue (os.date ('!%a', time) == 'Sun', 'os.date() did not return expected value when passed \"!%a\" [140]')\n\tassertTrue (os.date ('!%A', time) == 'Sunday', 'os.date() did not return expected value when passed \"!%A\" [141]')\n\tassertTrue (os.date ('!%b', time) == 'Feb', 'os.date() did not return expected value when passed \"!%b\" [142]')\n\tassertTrue (os.date ('!%B', time) == 'February', 'os.date() did not return expected value when passed \"!%B\" [143]')\n\tassertTrue (os.date ('!%d', time) == '28', 'os.date() did not return expected value when passed \"!%d\" [144]')\n\tassertTrue (os.date ('!%H', time) == '02', 'os.date() did not return expected value when passed \"!%H\" [145]')\n\tassertTrue (os.date ('!%I', time) == '02', 'os.date() did not return expected value when passed \"!%I\" [146]')\n\tassertTrue (os.date ('!%j', time) == '059', 'os.date() did not return expected value when passed \"!%j\" [147]')\n\tassertTrue (os.date ('!%m', time) == '02', 'os.date() did not return expected value when passed \"!%m\" [148]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [149]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [150]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [151]')\n\tassertTrue (os.date ('!%U', time) == '09', 'os.date() did not return expected value when passed \"!%U\" [152]')\n\tassertTrue (os.date ('!%w', time) == '0', 'os.date() did not return expected value when passed \"!%w\" [153]')\n\tassertTrue (os.date ('!%W', time) == '08', 'os.date() did not return expected value when passed \"!%W\" [154]')\n\tassertTrue (os.date ('!%x', time) == '02/28/99', 'os.date() did not return expected value when passed \"!%x\" [155]')\n\tassertTrue (os.date ('!%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"!%X\" [156]')\n\tassertTrue (os.date ('!%y', time) == '99', 'os.date() did not return expected value when passed \"!%y\" [157]')\n\tassertTrue (os.date ('!%Y', time) == '1999', 'os.date() did not return expected value when passed \"!%Y\" [158]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [159]')\n\tassertTrue (os.date ('*t', time).hour == 2, 'os.date() did not return expected value when passed \"*t\" [160]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [161]')\n\tassertTrue (os.date ('*t', time).wday == 1, 'os.date() did not return expected value when passed \"*t\" [162]')\n\tassertTrue (os.date ('*t', time).day == 28, 'os.date() did not return expected value when passed \"*t\" [163]')\n\tassertTrue (os.date ('*t', time).month == 2, 'os.date() did not return expected value when passed \"*t\" [164]')\n\tassertTrue (os.date ('*t', time).year == 1999, 'os.date() did not return expected value when passed \"*t\" [165]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [166]')\n\tassertTrue (os.date ('*t', time).yday == 59, 'os.date() did not return expected value when passed \"*t\" [167]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [168]')\n\tassertTrue (os.date ('!*t', time).hour == 2, 'os.date() did not return expected value when passed \"!*t\" [169]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [170]')\n\tassertTrue (os.date ('!*t', time).wday == 1, 'os.date() did not return expected value when passed \"!*t\" [171]')\n\tassertTrue (os.date ('!*t', time).day == 28, 'os.date() did not return expected value when passed \"!*t\" [172]')\n\tassertTrue (os.date ('!*t', time).month == 2, 'os.date() did not return expected value when passed \"!*t\" [173]')\n\tassertTrue (os.date ('!*t', time).year == 1999, 'os.date() did not return expected value when passed \"!*t\" [174]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [175]')\n\tassertTrue (os.date ('!*t', time).yday == 59, 'os.date() did not return expected value when passed \"!*t\" [176]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [177]')\n\n\tlocal time = 920253600\n\n\tassertTrue (os.date ('%a', time) == 'Mon', 'os.date() did not return expected value when passed \"%a\" [178]')\n\tassertTrue (os.date ('%A', time) == 'Monday', 'os.date() did not return expected value when passed \"%A\" [179]')\n\tassertTrue (os.date ('%b', time) == 'Mar', 'os.date() did not return expected value when passed \"%b\" [180]')\n\tassertTrue (os.date ('%B', time) == 'March', 'os.date() did not return expected value when passed \"%B\" [181]')\n\tassertTrue (os.date ('%d', time) == '01', 'os.date() did not return expected value when passed \"%d\" [182]')\n\tassertTrue (os.date ('%H', time) == '02', 'os.date() did not return expected value when passed \"%H\" [183]')\n\tassertTrue (os.date ('%I', time) == '02', 'os.date() did not return expected value when passed \"%I\" [184]')\n\tassertTrue (os.date ('%j', time) == '060', 'os.date() did not return expected value when passed \"%j\" [185]')\n\tassertTrue (os.date ('%m', time) == '03', 'os.date() did not return expected value when passed \"%m\" [186]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [187]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [188]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [189]')\n\tassertTrue (os.date ('%U', time) == '09', 'os.date() did not return expected value when passed \"%U\" [190]')\n\tassertTrue (os.date ('%w', time) == '1', 'os.date() did not return expected value when passed \"%w\" [191]')\n\tassertTrue (os.date ('%W', time) == '09', 'os.date() did not return expected value when passed \"%W\" [192]')\n\tassertTrue (os.date ('%x', time) == '03/01/99', 'os.date() did not return expected value when passed \"%x\" [193]')\n\tassertTrue (os.date ('%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"%X\" [194]')\n\tassertTrue (os.date ('%y', time) == '99', 'os.date() did not return expected value when passed \"%y\" [195]')\n\tassertTrue (os.date ('%Y', time) == '1999', 'os.date() did not return expected value when passed \"%Y\" [196]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [197]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [198]')\n\tassertTrue (os.date ('!%a', time) == 'Mon', 'os.date() did not return expected value when passed \"!%a\" [199]')\n\tassertTrue (os.date ('!%A', time) == 'Monday', 'os.date() did not return expected value when passed \"!%A\" [200]')\n\tassertTrue (os.date ('!%b', time) == 'Mar', 'os.date() did not return expected value when passed \"!%b\" [201]')\n\tassertTrue (os.date ('!%B', time) == 'March', 'os.date() did not return expected value when passed \"!%B\" [202]')\n\tassertTrue (os.date ('!%d', time) == '01', 'os.date() did not return expected value when passed \"!%d\" [203]')\n\tassertTrue (os.date ('!%H', time) == '02', 'os.date() did not return expected value when passed \"!%H\" [204]')\n\tassertTrue (os.date ('!%I', time) == '02', 'os.date() did not return expected value when passed \"!%I\" [205]')\n\tassertTrue (os.date ('!%j', time) == '060', 'os.date() did not return expected value when passed \"!%j\" [206]')\n\tassertTrue (os.date ('!%m', time) == '03', 'os.date() did not return expected value when passed \"!%m\" [207]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [208]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [209]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [210]')\n\tassertTrue (os.date ('!%U', time) == '09', 'os.date() did not return expected value when passed \"!%U\" [211]')\n\tassertTrue (os.date ('!%w', time) == '1', 'os.date() did not return expected value when passed \"!%w\" [212]')\n\tassertTrue (os.date ('!%W', time) == '09', 'os.date() did not return expected value when passed \"!%W\" [213]')\n\tassertTrue (os.date ('!%x', time) == '03/01/99', 'os.date() did not return expected value when passed \"!%x\" [214]')\n\tassertTrue (os.date ('!%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"!%X\" [215]')\n\tassertTrue (os.date ('!%y', time) == '99', 'os.date() did not return expected value when passed \"!%y\" [216]')\n\tassertTrue (os.date ('!%Y', time) == '1999', 'os.date() did not return expected value when passed \"!%Y\" [217]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [218]')\n\tassertTrue (os.date ('*t', time).hour == 2, 'os.date() did not return expected value when passed \"*t\" [219]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [220]')\n\tassertTrue (os.date ('*t', time).wday == 2, 'os.date() did not return expected value when passed \"*t\" [221]')\n\tassertTrue (os.date ('*t', time).day == 1, 'os.date() did not return expected value when passed \"*t\" [222]')\n\tassertTrue (os.date ('*t', time).month == 3, 'os.date() did not return expected value when passed \"*t\" [223]')\n\tassertTrue (os.date ('*t', time).year == 1999, 'os.date() did not return expected value when passed \"*t\" [224]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [225]')\n\tassertTrue (os.date ('*t', time).yday == 60, 'os.date() did not return expected value when passed \"*t\" [226]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [227]')\n\tassertTrue (os.date ('!*t', time).hour == 2, 'os.date() did not return expected value when passed \"!*t\" [228]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [229]')\n\tassertTrue (os.date ('!*t', time).wday == 2, 'os.date() did not return expected value when passed \"!*t\" [230]')\n\tassertTrue (os.date ('!*t', time).day == 1, 'os.date() did not return expected value when passed \"!*t\" [231]')\n\tassertTrue (os.date ('!*t', time).month == 3, 'os.date() did not return expected value when passed \"!*t\" [232]')\n\tassertTrue (os.date ('!*t', time).year == 1999, 'os.date() did not return expected value when passed \"!*t\" [233]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [234]')\n\tassertTrue (os.date ('!*t', time).yday == 60, 'os.date() did not return expected value when passed \"!*t\" [235]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [236]')\n\n\tlocal time = 920257200\n\n\tassertTrue (os.date ('%a', time) == 'Mon', 'os.date() did not return expected value when passed \"%a\" [237]')\n\tassertTrue (os.date ('%A', time) == 'Monday', 'os.date() did not return expected value when passed \"%A\" [238]')\n\tassertTrue (os.date ('%b', time) == 'Mar', 'os.date() did not return expected value when passed \"%b\" [239]')\n\tassertTrue (os.date ('%B', time) == 'March', 'os.date() did not return expected value when passed \"%B\" [240]')\n\tassertTrue (os.date ('%d', time) == '01', 'os.date() did not return expected value when passed \"%d\" [241]')\n\tassertTrue (os.date ('%H', time) == '03', 'os.date() did not return expected value when passed \"%H\" [242]')\n\tassertTrue (os.date ('%I', time) == '03', 'os.date() did not return expected value when passed \"%I\" [243]')\n\tassertTrue (os.date ('%j', time) == '060', 'os.date() did not return expected value when passed \"%j\" [244]')\n\tassertTrue (os.date ('%m', time) == '03', 'os.date() did not return expected value when passed \"%m\" [245]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [246]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [247]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [248]')\n\tassertTrue (os.date ('%U', time) == '09', 'os.date() did not return expected value when passed \"%U\" [249]')\n\tassertTrue (os.date ('%w', time) == '1', 'os.date() did not return expected value when passed \"%w\" [250]')\n\tassertTrue (os.date ('%W', time) == '09', 'os.date() did not return expected value when passed \"%W\" [251]')\n\tassertTrue (os.date ('%x', time) == '03/01/99', 'os.date() did not return expected value when passed \"%x\" [252]')\n\tassertTrue (os.date ('%X', time) == '03:00:00', 'os.date() did not return expected value when passed \"%X\" [253]')\n\tassertTrue (os.date ('%y', time) == '99', 'os.date() did not return expected value when passed \"%y\" [254]')\n\tassertTrue (os.date ('%Y', time) == '1999', 'os.date() did not return expected value when passed \"%Y\" [255]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [256]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [257]')\n\tassertTrue (os.date ('!%a', time) == 'Mon', 'os.date() did not return expected value when passed \"!%a\" [258]')\n\tassertTrue (os.date ('!%A', time) == 'Monday', 'os.date() did not return expected value when passed \"!%A\" [259]')\n\tassertTrue (os.date ('!%b', time) == 'Mar', 'os.date() did not return expected value when passed \"!%b\" [260]')\n\tassertTrue (os.date ('!%B', time) == 'March', 'os.date() did not return expected value when passed \"!%B\" [261]')\n\tassertTrue (os.date ('!%d', time) == '01', 'os.date() did not return expected value when passed \"!%d\" [262]')\n\tassertTrue (os.date ('!%H', time) == '03', 'os.date() did not return expected value when passed \"!%H\" [263]')\n\tassertTrue (os.date ('!%I', time) == '03', 'os.date() did not return expected value when passed \"!%I\" [264]')\n\tassertTrue (os.date ('!%j', time) == '060', 'os.date() did not return expected value when passed \"!%j\" [265]')\n\tassertTrue (os.date ('!%m', time) == '03', 'os.date() did not return expected value when passed \"!%m\" [266]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [267]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [268]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [269]')\n\tassertTrue (os.date ('!%U', time) == '09', 'os.date() did not return expected value when passed \"!%U\" [270]')\n\tassertTrue (os.date ('!%w', time) == '1', 'os.date() did not return expected value when passed \"!%w\" [271]')\n\tassertTrue (os.date ('!%W', time) == '09', 'os.date() did not return expected value when passed \"!%W\" [272]')\n\tassertTrue (os.date ('!%x', time) == '03/01/99', 'os.date() did not return expected value when passed \"!%x\" [273]')\n\tassertTrue (os.date ('!%X', time) == '03:00:00', 'os.date() did not return expected value when passed \"!%X\" [274]')\n\tassertTrue (os.date ('!%y', time) == '99', 'os.date() did not return expected value when passed \"!%y\" [275]')\n\tassertTrue (os.date ('!%Y', time) == '1999', 'os.date() did not return expected value when passed \"!%Y\" [276]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [277]')\n\tassertTrue (os.date ('*t', time).hour == 3, 'os.date() did not return expected value when passed \"*t\" [278]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [279]')\n\tassertTrue (os.date ('*t', time).wday == 2, 'os.date() did not return expected value when passed \"*t\" [280]')\n\tassertTrue (os.date ('*t', time).day == 1, 'os.date() did not return expected value when passed \"*t\" [281]')\n\tassertTrue (os.date ('*t', time).month == 3, 'os.date() did not return expected value when passed \"*t\" [282]')\n\tassertTrue (os.date ('*t', time).year == 1999, 'os.date() did not return expected value when passed \"*t\" [283]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [284]')\n\tassertTrue (os.date ('*t', time).yday == 60, 'os.date() did not return expected value when passed \"*t\" [285]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [286]')\n\tassertTrue (os.date ('!*t', time).hour == 3, 'os.date() did not return expected value when passed \"!*t\" [287]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [288]')\n\tassertTrue (os.date ('!*t', time).wday == 2, 'os.date() did not return expected value when passed \"!*t\" [289]')\n\tassertTrue (os.date ('!*t', time).day == 1, 'os.date() did not return expected value when passed \"!*t\" [290]')\n\tassertTrue (os.date ('!*t', time).month == 3, 'os.date() did not return expected value when passed \"!*t\" [291]')\n\tassertTrue (os.date ('!*t', time).year == 1999, 'os.date() did not return expected value when passed \"!*t\" [292]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [293]')\n\tassertTrue (os.date ('!*t', time).yday == 60, 'os.date() did not return expected value when passed \"!*t\" [294]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [295]')\n\n\tlocal time = 946641600\n\n\tassertTrue (os.date ('%a', time) == 'Fri', 'os.date() did not return expected value when passed \"%a\" [296]')\n\tassertTrue (os.date ('%A', time) == 'Friday', 'os.date() did not return expected value when passed \"%A\" [297]')\n\tassertTrue (os.date ('%b', time) == 'Dec', 'os.date() did not return expected value when passed \"%b\" [298]')\n\tassertTrue (os.date ('%B', time) == 'December', 'os.date() did not return expected value when passed \"%B\" [299]')\n\tassertTrue (os.date ('%d', time) == '31', 'os.date() did not return expected value when passed \"%d\" [300]')\n\tassertTrue (os.date ('%H', time) == '12', 'os.date() did not return expected value when passed \"%H\" [301]')\n\tassertTrue (os.date ('%I', time) == '12', 'os.date() did not return expected value when passed \"%I\" [302]')\n\tassertTrue (os.date ('%j', time) == '365', 'os.date() did not return expected value when passed \"%j\" [303]')\n\tassertTrue (os.date ('%m', time) == '12', 'os.date() did not return expected value when passed \"%m\" [304]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [305]')\n\tassertTrue (os.date ('%p', time) == 'PM', 'os.date() did not return expected value when passed \"%p\" [306]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [307]')\n\tassertTrue (os.date ('%U', time) == '52', 'os.date() did not return expected value when passed \"%U\" [308]')\n\tassertTrue (os.date ('%w', time) == '5', 'os.date() did not return expected value when passed \"%w\" [309]')\n\tassertTrue (os.date ('%W', time) == '52', 'os.date() did not return expected value when passed \"%W\" [310]')\n\tassertTrue (os.date ('%x', time) == '12/31/99', 'os.date() did not return expected value when passed \"%x\" [311]')\n\tassertTrue (os.date ('%X', time) == '12:00:00', 'os.date() did not return expected value when passed \"%X\" [312]')\n\tassertTrue (os.date ('%y', time) == '99', 'os.date() did not return expected value when passed \"%y\" [313]')\n\tassertTrue (os.date ('%Y', time) == '1999', 'os.date() did not return expected value when passed \"%Y\" [314]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [315]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [316]')\n\tassertTrue (os.date ('!%a', time) == 'Fri', 'os.date() did not return expected value when passed \"!%a\" [317]')\n\tassertTrue (os.date ('!%A', time) == 'Friday', 'os.date() did not return expected value when passed \"!%A\" [318]')\n\tassertTrue (os.date ('!%b', time) == 'Dec', 'os.date() did not return expected value when passed \"!%b\" [319]')\n\tassertTrue (os.date ('!%B', time) == 'December', 'os.date() did not return expected value when passed \"!%B\" [320]')\n\tassertTrue (os.date ('!%d', time) == '31', 'os.date() did not return expected value when passed \"!%d\" [321]')\n\tassertTrue (os.date ('!%H', time) == '12', 'os.date() did not return expected value when passed \"!%H\" [322]')\n\tassertTrue (os.date ('!%I', time) == '12', 'os.date() did not return expected value when passed \"!%I\" [323]')\n\tassertTrue (os.date ('!%j', time) == '365', 'os.date() did not return expected value when passed \"!%j\" [324]')\n\tassertTrue (os.date ('!%m', time) == '12', 'os.date() did not return expected value when passed \"!%m\" [325]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [326]')\n\tassertTrue (os.date ('!%p', time) == 'PM', 'os.date() did not return expected value when passed \"!%p\" [327]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [328]')\n\tassertTrue (os.date ('!%U', time) == '52', 'os.date() did not return expected value when passed \"!%U\" [329]')\n\tassertTrue (os.date ('!%w', time) == '5', 'os.date() did not return expected value when passed \"!%w\" [330]')\n\tassertTrue (os.date ('!%W', time) == '52', 'os.date() did not return expected value when passed \"!%W\" [331]')\n\tassertTrue (os.date ('!%x', time) == '12/31/99', 'os.date() did not return expected value when passed \"!%x\" [332]')\n\tassertTrue (os.date ('!%X', time) == '12:00:00', 'os.date() did not return expected value when passed \"!%X\" [333]')\n\tassertTrue (os.date ('!%y', time) == '99', 'os.date() did not return expected value when passed \"!%y\" [334]')\n\tassertTrue (os.date ('!%Y', time) == '1999', 'os.date() did not return expected value when passed \"!%Y\" [335]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [336]')\n\tassertTrue (os.date ('*t', time).hour == 12, 'os.date() did not return expected value when passed \"*t\" [337]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [338]')\n\tassertTrue (os.date ('*t', time).wday == 6, 'os.date() did not return expected value when passed \"*t\" [339]')\n\tassertTrue (os.date ('*t', time).day == 31, 'os.date() did not return expected value when passed \"*t\" [340]')\n\tassertTrue (os.date ('*t', time).month == 12, 'os.date() did not return expected value when passed \"*t\" [341]')\n\tassertTrue (os.date ('*t', time).year == 1999, 'os.date() did not return expected value when passed \"*t\" [342]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [343]')\n\tassertTrue (os.date ('*t', time).yday == 365, 'os.date() did not return expected value when passed \"*t\" [344]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [345]')\n\tassertTrue (os.date ('!*t', time).hour == 12, 'os.date() did not return expected value when passed \"!*t\" [346]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [347]')\n\tassertTrue (os.date ('!*t', time).wday == 6, 'os.date() did not return expected value when passed \"!*t\" [348]')\n\tassertTrue (os.date ('!*t', time).day == 31, 'os.date() did not return expected value when passed \"!*t\" [349]')\n\tassertTrue (os.date ('!*t', time).month == 12, 'os.date() did not return expected value when passed \"!*t\" [350]')\n\tassertTrue (os.date ('!*t', time).year == 1999, 'os.date() did not return expected value when passed \"!*t\" [351]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [352]')\n\tassertTrue (os.date ('!*t', time).yday == 365, 'os.date() did not return expected value when passed \"!*t\" [353]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [354]')\n\n\tlocal time = 946688400\n\n\tassertTrue (os.date ('%a', time) == 'Sat', 'os.date() did not return expected value when passed \"%a\" [355]')\n\tassertTrue (os.date ('%A', time) == 'Saturday', 'os.date() did not return expected value when passed \"%A\" [356]')\n\tassertTrue (os.date ('%b', time) == 'Jan', 'os.date() did not return expected value when passed \"%b\" [357]')\n\tassertTrue (os.date ('%B', time) == 'January', 'os.date() did not return expected value when passed \"%B\" [358]')\n\tassertTrue (os.date ('%d', time) == '01', 'os.date() did not return expected value when passed \"%d\" [359]')\n\tassertTrue (os.date ('%H', time) == '01', 'os.date() did not return expected value when passed \"%H\" [360]')\n\tassertTrue (os.date ('%I', time) == '01', 'os.date() did not return expected value when passed \"%I\" [361]')\n\tassertTrue (os.date ('%j', time) == '001', 'os.date() did not return expected value when passed \"%j\" [362]')\n\tassertTrue (os.date ('%m', time) == '01', 'os.date() did not return expected value when passed \"%m\" [363]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [364]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [365]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [366]')\n\tassertTrue (os.date ('%U', time) == '00', 'os.date() did not return expected value when passed \"%U\" [367]')\n\tassertTrue (os.date ('%w', time) == '6', 'os.date() did not return expected value when passed \"%w\" [368]')\n\tassertTrue (os.date ('%W', time) == '00', 'os.date() did not return expected value when passed \"%W\" [369]')\n\tassertTrue (os.date ('%x', time) == '01/01/00', 'os.date() did not return expected value when passed \"%x\" [370]')\n\tassertTrue (os.date ('%X', time) == '01:00:00', 'os.date() did not return expected value when passed \"%X\" [371]')\n\tassertTrue (os.date ('%y', time) == '00', 'os.date() did not return expected value when passed \"%y\" [372]')\n\tassertTrue (os.date ('%Y', time) == '2000', 'os.date() did not return expected value when passed \"%Y\" [373]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [374]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [375]')\n\tassertTrue (os.date ('!%a', time) == 'Sat', 'os.date() did not return expected value when passed \"!%a\" [376]')\n\tassertTrue (os.date ('!%A', time) == 'Saturday', 'os.date() did not return expected value when passed \"!%A\" [377]')\n\tassertTrue (os.date ('!%b', time) == 'Jan', 'os.date() did not return expected value when passed \"!%b\" [378]')\n\tassertTrue (os.date ('!%B', time) == 'January', 'os.date() did not return expected value when passed \"!%B\" [379]')\n\tassertTrue (os.date ('!%d', time) == '01', 'os.date() did not return expected value when passed \"!%d\" [380]')\n\tassertTrue (os.date ('!%H', time) == '01', 'os.date() did not return expected value when passed \"!%H\" [381]')\n\tassertTrue (os.date ('!%I', time) == '01', 'os.date() did not return expected value when passed \"!%I\" [382]')\n\tassertTrue (os.date ('!%j', time) == '001', 'os.date() did not return expected value when passed \"!%j\" [383]')\n\tassertTrue (os.date ('!%m', time) == '01', 'os.date() did not return expected value when passed \"!%m\" [384]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [385]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [386]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [387]')\n\tassertTrue (os.date ('!%U', time) == '00', 'os.date() did not return expected value when passed \"!%U\" [388]')\n\tassertTrue (os.date ('!%w', time) == '6', 'os.date() did not return expected value when passed \"!%w\" [389]')\n\tassertTrue (os.date ('!%W', time) == '00', 'os.date() did not return expected value when passed \"!%W\" [390]')\n\tassertTrue (os.date ('!%x', time) == '01/01/00', 'os.date() did not return expected value when passed \"!%x\" [391]')\n\tassertTrue (os.date ('!%X', time) == '01:00:00', 'os.date() did not return expected value when passed \"!%X\" [392]')\n\tassertTrue (os.date ('!%y', time) == '00', 'os.date() did not return expected value when passed \"!%y\" [393]')\n\tassertTrue (os.date ('!%Y', time) == '2000', 'os.date() did not return expected value when passed \"!%Y\" [394]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [395]')\n\tassertTrue (os.date ('*t', time).hour == 1, 'os.date() did not return expected value when passed \"*t\" [396]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [397]')\n\tassertTrue (os.date ('*t', time).wday == 7, 'os.date() did not return expected value when passed \"*t\" [398]')\n\tassertTrue (os.date ('*t', time).day == 1, 'os.date() did not return expected value when passed \"*t\" [399]')\n\tassertTrue (os.date ('*t', time).month == 1, 'os.date() did not return expected value when passed \"*t\" [400]')\n\tassertTrue (os.date ('*t', time).year == 2000, 'os.date() did not return expected value when passed \"*t\" [401]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [402]')\n\tassertTrue (os.date ('*t', time).yday == 1, 'os.date() did not return expected value when passed \"*t\" [403]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [404]')\n\tassertTrue (os.date ('!*t', time).hour == 1, 'os.date() did not return expected value when passed \"!*t\" [405]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [406]')\n\tassertTrue (os.date ('!*t', time).wday == 7, 'os.date() did not return expected value when passed \"!*t\" [407]')\n\tassertTrue (os.date ('!*t', time).day == 1, 'os.date() did not return expected value when passed \"!*t\" [408]')\n\tassertTrue (os.date ('!*t', time).month == 1, 'os.date() did not return expected value when passed \"!*t\" [409]')\n\tassertTrue (os.date ('!*t', time).year == 2000, 'os.date() did not return expected value when passed \"!*t\" [410]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [411]')\n\tassertTrue (os.date ('!*t', time).yday == 1, 'os.date() did not return expected value when passed \"!*t\" [412]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [413]')\n\n\tlocal time = 949370400\n\n\tassertTrue (os.date ('%a', time) == 'Tue', 'os.date() did not return expected value when passed \"%a\" [414]')\n\tassertTrue (os.date ('%A', time) == 'Tuesday', 'os.date() did not return expected value when passed \"%A\" [415]')\n\tassertTrue (os.date ('%b', time) == 'Feb', 'os.date() did not return expected value when passed \"%b\" [416]')\n\tassertTrue (os.date ('%B', time) == 'February', 'os.date() did not return expected value when passed \"%B\" [417]')\n\tassertTrue (os.date ('%d', time) == '01', 'os.date() did not return expected value when passed \"%d\" [418]')\n\tassertTrue (os.date ('%H', time) == '02', 'os.date() did not return expected value when passed \"%H\" [419]')\n\tassertTrue (os.date ('%I', time) == '02', 'os.date() did not return expected value when passed \"%I\" [420]')\n\tassertTrue (os.date ('%j', time) == '032', 'os.date() did not return expected value when passed \"%j\" [421]')\n\tassertTrue (os.date ('%m', time) == '02', 'os.date() did not return expected value when passed \"%m\" [422]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [423]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [424]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [425]')\n\tassertTrue (os.date ('%U', time) == '05', 'os.date() did not return expected value when passed \"%U\" [426]')\n\tassertTrue (os.date ('%w', time) == '2', 'os.date() did not return expected value when passed \"%w\" [427]')\n\tassertTrue (os.date ('%W', time) == '05', 'os.date() did not return expected value when passed \"%W\" [428]')\n\tassertTrue (os.date ('%x', time) == '02/01/00', 'os.date() did not return expected value when passed \"%x\" [429]')\n\tassertTrue (os.date ('%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"%X\" [430]')\n\tassertTrue (os.date ('%y', time) == '00', 'os.date() did not return expected value when passed \"%y\" [431]')\n\tassertTrue (os.date ('%Y', time) == '2000', 'os.date() did not return expected value when passed \"%Y\" [432]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [433]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [434]')\n\tassertTrue (os.date ('!%a', time) == 'Tue', 'os.date() did not return expected value when passed \"!%a\" [435]')\n\tassertTrue (os.date ('!%A', time) == 'Tuesday', 'os.date() did not return expected value when passed \"!%A\" [436]')\n\tassertTrue (os.date ('!%b', time) == 'Feb', 'os.date() did not return expected value when passed \"!%b\" [437]')\n\tassertTrue (os.date ('!%B', time) == 'February', 'os.date() did not return expected value when passed \"!%B\" [438]')\n\tassertTrue (os.date ('!%d', time) == '01', 'os.date() did not return expected value when passed \"!%d\" [439]')\n\tassertTrue (os.date ('!%H', time) == '02', 'os.date() did not return expected value when passed \"!%H\" [440]')\n\tassertTrue (os.date ('!%I', time) == '02', 'os.date() did not return expected value when passed \"!%I\" [441]')\n\tassertTrue (os.date ('!%j', time) == '032', 'os.date() did not return expected value when passed \"!%j\" [442]')\n\tassertTrue (os.date ('!%m', time) == '02', 'os.date() did not return expected value when passed \"!%m\" [443]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [444]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [445]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [446]')\n\tassertTrue (os.date ('!%U', time) == '05', 'os.date() did not return expected value when passed \"!%U\" [447]')\n\tassertTrue (os.date ('!%w', time) == '2', 'os.date() did not return expected value when passed \"!%w\" [448]')\n\tassertTrue (os.date ('!%W', time) == '05', 'os.date() did not return expected value when passed \"!%W\" [449]')\n\tassertTrue (os.date ('!%x', time) == '02/01/00', 'os.date() did not return expected value when passed \"!%x\" [450]')\n\tassertTrue (os.date ('!%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"!%X\" [451]')\n\tassertTrue (os.date ('!%y', time) == '00', 'os.date() did not return expected value when passed \"!%y\" [452]')\n\tassertTrue (os.date ('!%Y', time) == '2000', 'os.date() did not return expected value when passed \"!%Y\" [453]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [454]')\n\tassertTrue (os.date ('*t', time).hour == 2, 'os.date() did not return expected value when passed \"*t\" [455]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [456]')\n\tassertTrue (os.date ('*t', time).wday == 3, 'os.date() did not return expected value when passed \"*t\" [457]')\n\tassertTrue (os.date ('*t', time).day == 1, 'os.date() did not return expected value when passed \"*t\" [458]')\n\tassertTrue (os.date ('*t', time).month == 2, 'os.date() did not return expected value when passed \"*t\" [459]')\n\tassertTrue (os.date ('*t', time).year == 2000, 'os.date() did not return expected value when passed \"*t\" [460]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [461]')\n\tassertTrue (os.date ('*t', time).yday == 32, 'os.date() did not return expected value when passed \"*t\" [462]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [463]')\n\tassertTrue (os.date ('!*t', time).hour == 2, 'os.date() did not return expected value when passed \"!*t\" [464]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [465]')\n\tassertTrue (os.date ('!*t', time).wday == 3, 'os.date() did not return expected value when passed \"!*t\" [466]')\n\tassertTrue (os.date ('!*t', time).day == 1, 'os.date() did not return expected value when passed \"!*t\" [467]')\n\tassertTrue (os.date ('!*t', time).month == 2, 'os.date() did not return expected value when passed \"!*t\" [468]')\n\tassertTrue (os.date ('!*t', time).year == 2000, 'os.date() did not return expected value when passed \"!*t\" [469]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [470]')\n\tassertTrue (os.date ('!*t', time).yday == 32, 'os.date() did not return expected value when passed \"!*t\" [471]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [472]')\n\n\tlocal time = 951703200\n\n\tassertTrue (os.date ('%a', time) == 'Mon', 'os.date() did not return expected value when passed \"%a\" [473]')\n\tassertTrue (os.date ('%A', time) == 'Monday', 'os.date() did not return expected value when passed \"%A\" [474]')\n\tassertTrue (os.date ('%b', time) == 'Feb', 'os.date() did not return expected value when passed \"%b\" [475]')\n\tassertTrue (os.date ('%B', time) == 'February', 'os.date() did not return expected value when passed \"%B\" [476]')\n\tassertTrue (os.date ('%d', time) == '28', 'os.date() did not return expected value when passed \"%d\" [477]')\n\tassertTrue (os.date ('%H', time) == '02', 'os.date() did not return expected value when passed \"%H\" [478]')\n\tassertTrue (os.date ('%I', time) == '02', 'os.date() did not return expected value when passed \"%I\" [479]')\n\tassertTrue (os.date ('%j', time) == '059', 'os.date() did not return expected value when passed \"%j\" [480]')\n\tassertTrue (os.date ('%m', time) == '02', 'os.date() did not return expected value when passed \"%m\" [481]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [482]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [483]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [484]')\n\tassertTrue (os.date ('%U', time) == '09', 'os.date() did not return expected value when passed \"%U\" [485]')\n\tassertTrue (os.date ('%w', time) == '1', 'os.date() did not return expected value when passed \"%w\" [486]')\n\tassertTrue (os.date ('%W', time) == '09', 'os.date() did not return expected value when passed \"%W\" [487]')\n\tassertTrue (os.date ('%x', time) == '02/28/00', 'os.date() did not return expected value when passed \"%x\" [488]')\n\tassertTrue (os.date ('%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"%X\" [489]')\n\tassertTrue (os.date ('%y', time) == '00', 'os.date() did not return expected value when passed \"%y\" [490]')\n\tassertTrue (os.date ('%Y', time) == '2000', 'os.date() did not return expected value when passed \"%Y\" [491]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [492]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [493]')\n\tassertTrue (os.date ('!%a', time) == 'Mon', 'os.date() did not return expected value when passed \"!%a\" [494]')\n\tassertTrue (os.date ('!%A', time) == 'Monday', 'os.date() did not return expected value when passed \"!%A\" [495]')\n\tassertTrue (os.date ('!%b', time) == 'Feb', 'os.date() did not return expected value when passed \"!%b\" [496]')\n\tassertTrue (os.date ('!%B', time) == 'February', 'os.date() did not return expected value when passed \"!%B\" [497]')\n\tassertTrue (os.date ('!%d', time) == '28', 'os.date() did not return expected value when passed \"!%d\" [498]')\n\tassertTrue (os.date ('!%H', time) == '02', 'os.date() did not return expected value when passed \"!%H\" [499]')\n\tassertTrue (os.date ('!%I', time) == '02', 'os.date() did not return expected value when passed \"!%I\" [500]')\n\tassertTrue (os.date ('!%j', time) == '059', 'os.date() did not return expected value when passed \"!%j\" [501]')\n\tassertTrue (os.date ('!%m', time) == '02', 'os.date() did not return expected value when passed \"!%m\" [502]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [503]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [504]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [505]')\n\tassertTrue (os.date ('!%U', time) == '09', 'os.date() did not return expected value when passed \"!%U\" [506]')\n\tassertTrue (os.date ('!%w', time) == '1', 'os.date() did not return expected value when passed \"!%w\" [507]')\n\tassertTrue (os.date ('!%W', time) == '09', 'os.date() did not return expected value when passed \"!%W\" [508]')\n\tassertTrue (os.date ('!%x', time) == '02/28/00', 'os.date() did not return expected value when passed \"!%x\" [509]')\n\tassertTrue (os.date ('!%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"!%X\" [510]')\n\tassertTrue (os.date ('!%y', time) == '00', 'os.date() did not return expected value when passed \"!%y\" [511]')\n\tassertTrue (os.date ('!%Y', time) == '2000', 'os.date() did not return expected value when passed \"!%Y\" [512]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [513]')\n\tassertTrue (os.date ('*t', time).hour == 2, 'os.date() did not return expected value when passed \"*t\" [514]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [515]')\n\tassertTrue (os.date ('*t', time).wday == 2, 'os.date() did not return expected value when passed \"*t\" [516]')\n\tassertTrue (os.date ('*t', time).day == 28, 'os.date() did not return expected value when passed \"*t\" [517]')\n\tassertTrue (os.date ('*t', time).month == 2, 'os.date() did not return expected value when passed \"*t\" [518]')\n\tassertTrue (os.date ('*t', time).year == 2000, 'os.date() did not return expected value when passed \"*t\" [519]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [520]')\n\tassertTrue (os.date ('*t', time).yday == 59, 'os.date() did not return expected value when passed \"*t\" [521]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [522]')\n\tassertTrue (os.date ('!*t', time).hour == 2, 'os.date() did not return expected value when passed \"!*t\" [523]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [524]')\n\tassertTrue (os.date ('!*t', time).wday == 2, 'os.date() did not return expected value when passed \"!*t\" [525]')\n\tassertTrue (os.date ('!*t', time).day == 28, 'os.date() did not return expected value when passed \"!*t\" [526]')\n\tassertTrue (os.date ('!*t', time).month == 2, 'os.date() did not return expected value when passed \"!*t\" [527]')\n\tassertTrue (os.date ('!*t', time).year == 2000, 'os.date() did not return expected value when passed \"!*t\" [528]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [529]')\n\tassertTrue (os.date ('!*t', time).yday == 59, 'os.date() did not return expected value when passed \"!*t\" [530]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [531]')\n\n\tlocal time = 951789600\n\n\tassertTrue (os.date ('%a', time) == 'Tue', 'os.date() did not return expected value when passed \"%a\" [532]')\n\tassertTrue (os.date ('%A', time) == 'Tuesday', 'os.date() did not return expected value when passed \"%A\" [533]')\n\tassertTrue (os.date ('%b', time) == 'Feb', 'os.date() did not return expected value when passed \"%b\" [534]')\n\tassertTrue (os.date ('%B', time) == 'February', 'os.date() did not return expected value when passed \"%B\" [535]')\n\tassertTrue (os.date ('%d', time) == '29', 'os.date() did not return expected value when passed \"%d\" [536]')\n\tassertTrue (os.date ('%H', time) == '02', 'os.date() did not return expected value when passed \"%H\" [537]')\n\tassertTrue (os.date ('%I', time) == '02', 'os.date() did not return expected value when passed \"%I\" [538]')\n\tassertTrue (os.date ('%j', time) == '060', 'os.date() did not return expected value when passed \"%j\" [539]')\n\tassertTrue (os.date ('%m', time) == '02', 'os.date() did not return expected value when passed \"%m\" [540]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [541]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [542]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [543]')\n\tassertTrue (os.date ('%U', time) == '09', 'os.date() did not return expected value when passed \"%U\" [544]')\n\tassertTrue (os.date ('%w', time) == '2', 'os.date() did not return expected value when passed \"%w\" [545]')\n\tassertTrue (os.date ('%W', time) == '09', 'os.date() did not return expected value when passed \"%W\" [546]')\n\tassertTrue (os.date ('%x', time) == '02/29/00', 'os.date() did not return expected value when passed \"%x\" [547]')\n\tassertTrue (os.date ('%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"%X\" [548]')\n\tassertTrue (os.date ('%y', time) == '00', 'os.date() did not return expected value when passed \"%y\" [549]')\n\tassertTrue (os.date ('%Y', time) == '2000', 'os.date() did not return expected value when passed \"%Y\" [550]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [551]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [552]')\n\tassertTrue (os.date ('!%a', time) == 'Tue', 'os.date() did not return expected value when passed \"!%a\" [553]')\n\tassertTrue (os.date ('!%A', time) == 'Tuesday', 'os.date() did not return expected value when passed \"!%A\" [554]')\n\tassertTrue (os.date ('!%b', time) == 'Feb', 'os.date() did not return expected value when passed \"!%b\" [555]')\n\tassertTrue (os.date ('!%B', time) == 'February', 'os.date() did not return expected value when passed \"!%B\" [556]')\n\tassertTrue (os.date ('!%d', time) == '29', 'os.date() did not return expected value when passed \"!%d\" [557]')\n\tassertTrue (os.date ('!%H', time) == '02', 'os.date() did not return expected value when passed \"!%H\" [558]')\n\tassertTrue (os.date ('!%I', time) == '02', 'os.date() did not return expected value when passed \"!%I\" [559]')\n\tassertTrue (os.date ('!%j', time) == '060', 'os.date() did not return expected value when passed \"!%j\" [560]')\n\tassertTrue (os.date ('!%m', time) == '02', 'os.date() did not return expected value when passed \"!%m\" [561]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [562]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [563]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [564]')\n\tassertTrue (os.date ('!%U', time) == '09', 'os.date() did not return expected value when passed \"!%U\" [565]')\n\tassertTrue (os.date ('!%w', time) == '2', 'os.date() did not return expected value when passed \"!%w\" [566]')\n\tassertTrue (os.date ('!%W', time) == '09', 'os.date() did not return expected value when passed \"!%W\" [567]')\n\tassertTrue (os.date ('!%x', time) == '02/29/00', 'os.date() did not return expected value when passed \"!%x\" [568]')\n\tassertTrue (os.date ('!%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"!%X\" [569]')\n\tassertTrue (os.date ('!%y', time) == '00', 'os.date() did not return expected value when passed \"!%y\" [570]')\n\tassertTrue (os.date ('!%Y', time) == '2000', 'os.date() did not return expected value when passed \"!%Y\" [571]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [572]')\n\tassertTrue (os.date ('*t', time).hour == 2, 'os.date() did not return expected value when passed \"*t\" [573]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [574]')\n\tassertTrue (os.date ('*t', time).wday == 3, 'os.date() did not return expected value when passed \"*t\" [575]')\n\tassertTrue (os.date ('*t', time).day == 29, 'os.date() did not return expected value when passed \"*t\" [576]')\n\tassertTrue (os.date ('*t', time).month == 2, 'os.date() did not return expected value when passed \"*t\" [577]')\n\tassertTrue (os.date ('*t', time).year == 2000, 'os.date() did not return expected value when passed \"*t\" [578]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [579]')\n\tassertTrue (os.date ('*t', time).yday == 60, 'os.date() did not return expected value when passed \"*t\" [580]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [581]')\n\tassertTrue (os.date ('!*t', time).hour == 2, 'os.date() did not return expected value when passed \"!*t\" [582]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [583]')\n\tassertTrue (os.date ('!*t', time).wday == 3, 'os.date() did not return expected value when passed \"!*t\" [584]')\n\tassertTrue (os.date ('!*t', time).day == 29, 'os.date() did not return expected value when passed \"!*t\" [585]')\n\tassertTrue (os.date ('!*t', time).month == 2, 'os.date() did not return expected value when passed \"!*t\" [586]')\n\tassertTrue (os.date ('!*t', time).year == 2000, 'os.date() did not return expected value when passed \"!*t\" [587]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [588]')\n\tassertTrue (os.date ('!*t', time).yday == 60, 'os.date() did not return expected value when passed \"!*t\" [589]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [590]')\n\n\tlocal time = 951879600\n\n\tassertTrue (os.date ('%a', time) == 'Wed', 'os.date() did not return expected value when passed \"%a\" [591]')\n\tassertTrue (os.date ('%A', time) == 'Wednesday', 'os.date() did not return expected value when passed \"%A\" [592]')\n\tassertTrue (os.date ('%b', time) == 'Mar', 'os.date() did not return expected value when passed \"%b\" [593]')\n\tassertTrue (os.date ('%B', time) == 'March', 'os.date() did not return expected value when passed \"%B\" [594]')\n\tassertTrue (os.date ('%d', time) == '01', 'os.date() did not return expected value when passed \"%d\" [595]')\n\tassertTrue (os.date ('%H', time) == '03', 'os.date() did not return expected value when passed \"%H\" [596]')\n\tassertTrue (os.date ('%I', time) == '03', 'os.date() did not return expected value when passed \"%I\" [597]')\n\tassertTrue (os.date ('%j', time) == '061', 'os.date() did not return expected value when passed \"%j\" [598]')\n\tassertTrue (os.date ('%m', time) == '03', 'os.date() did not return expected value when passed \"%m\" [599]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [600]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [601]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [602]')\n\tassertTrue (os.date ('%U', time) == '09', 'os.date() did not return expected value when passed \"%U\" [603]')\n\tassertTrue (os.date ('%w', time) == '3', 'os.date() did not return expected value when passed \"%w\" [604]')\n\tassertTrue (os.date ('%W', time) == '09', 'os.date() did not return expected value when passed \"%W\" [605]')\n\tassertTrue (os.date ('%x', time) == '03/01/00', 'os.date() did not return expected value when passed \"%x\" [606]')\n\tassertTrue (os.date ('%X', time) == '03:00:00', 'os.date() did not return expected value when passed \"%X\" [607]')\n\tassertTrue (os.date ('%y', time) == '00', 'os.date() did not return expected value when passed \"%y\" [608]')\n\tassertTrue (os.date ('%Y', time) == '2000', 'os.date() did not return expected value when passed \"%Y\" [609]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [610]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [611]')\n\tassertTrue (os.date ('!%a', time) == 'Wed', 'os.date() did not return expected value when passed \"!%a\" [612]')\n\tassertTrue (os.date ('!%A', time) == 'Wednesday', 'os.date() did not return expected value when passed \"!%A\" [613]')\n\tassertTrue (os.date ('!%b', time) == 'Mar', 'os.date() did not return expected value when passed \"!%b\" [614]')\n\tassertTrue (os.date ('!%B', time) == 'March', 'os.date() did not return expected value when passed \"!%B\" [615]')\n\tassertTrue (os.date ('!%d', time) == '01', 'os.date() did not return expected value when passed \"!%d\" [616]')\n\tassertTrue (os.date ('!%H', time) == '03', 'os.date() did not return expected value when passed \"!%H\" [617]')\n\tassertTrue (os.date ('!%I', time) == '03', 'os.date() did not return expected value when passed \"!%I\" [618]')\n\tassertTrue (os.date ('!%j', time) == '061', 'os.date() did not return expected value when passed \"!%j\" [619]')\n\tassertTrue (os.date ('!%m', time) == '03', 'os.date() did not return expected value when passed \"!%m\" [620]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [621]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [622]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [623]')\n\tassertTrue (os.date ('!%U', time) == '09', 'os.date() did not return expected value when passed \"!%U\" [624]')\n\tassertTrue (os.date ('!%w', time) == '3', 'os.date() did not return expected value when passed \"!%w\" [625]')\n\tassertTrue (os.date ('!%W', time) == '09', 'os.date() did not return expected value when passed \"!%W\" [626]')\n\tassertTrue (os.date ('!%x', time) == '03/01/00', 'os.date() did not return expected value when passed \"!%x\" [627]')\n\tassertTrue (os.date ('!%X', time) == '03:00:00', 'os.date() did not return expected value when passed \"!%X\" [628]')\n\tassertTrue (os.date ('!%y', time) == '00', 'os.date() did not return expected value when passed \"!%y\" [629]')\n\tassertTrue (os.date ('!%Y', time) == '2000', 'os.date() did not return expected value when passed \"!%Y\" [630]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [631]')\n\tassertTrue (os.date ('*t', time).hour == 3, 'os.date() did not return expected value when passed \"*t\" [632]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [633]')\n\tassertTrue (os.date ('*t', time).wday == 4, 'os.date() did not return expected value when passed \"*t\" [634]')\n\tassertTrue (os.date ('*t', time).day == 1, 'os.date() did not return expected value when passed \"*t\" [635]')\n\tassertTrue (os.date ('*t', time).month == 3, 'os.date() did not return expected value when passed \"*t\" [636]')\n\tassertTrue (os.date ('*t', time).year == 2000, 'os.date() did not return expected value when passed \"*t\" [637]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [638]')\n\tassertTrue (os.date ('*t', time).yday == 61, 'os.date() did not return expected value when passed \"*t\" [639]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [640]')\n\tassertTrue (os.date ('!*t', time).hour == 3, 'os.date() did not return expected value when passed \"!*t\" [641]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [642]')\n\tassertTrue (os.date ('!*t', time).wday == 4, 'os.date() did not return expected value when passed \"!*t\" [643]')\n\tassertTrue (os.date ('!*t', time).day == 1, 'os.date() did not return expected value when passed \"!*t\" [644]')\n\tassertTrue (os.date ('!*t', time).month == 3, 'os.date() did not return expected value when passed \"!*t\" [645]')\n\tassertTrue (os.date ('!*t', time).year == 2000, 'os.date() did not return expected value when passed \"!*t\" [646]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [647]')\n\tassertTrue (os.date ('!*t', time).yday == 61, 'os.date() did not return expected value when passed \"!*t\" [648]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [649]')\n\n\tlocal time = 978264000\n\n\tassertTrue (os.date ('%a', time) == 'Sun', 'os.date() did not return expected value when passed \"%a\" [650]')\n\tassertTrue (os.date ('%A', time) == 'Sunday', 'os.date() did not return expected value when passed \"%A\" [651]')\n\tassertTrue (os.date ('%b', time) == 'Dec', 'os.date() did not return expected value when passed \"%b\" [652]')\n\tassertTrue (os.date ('%B', time) == 'December', 'os.date() did not return expected value when passed \"%B\" [653]')\n\tassertTrue (os.date ('%d', time) == '31', 'os.date() did not return expected value when passed \"%d\" [654]')\n\tassertTrue (os.date ('%H', time) == '12', 'os.date() did not return expected value when passed \"%H\" [655]')\n\tassertTrue (os.date ('%I', time) == '12', 'os.date() did not return expected value when passed \"%I\" [656]')\n\tassertTrue (os.date ('%j', time) == '366', 'os.date() did not return expected value when passed \"%j\" [657]')\n\tassertTrue (os.date ('%m', time) == '12', 'os.date() did not return expected value when passed \"%m\" [658]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [659]')\n\tassertTrue (os.date ('%p', time) == 'PM', 'os.date() did not return expected value when passed \"%p\" [660]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [661]')\n\tassertTrue (os.date ('%U', time) == '53', 'os.date() did not return expected value when passed \"%U\" [662]')\n\tassertTrue (os.date ('%w', time) == '0', 'os.date() did not return expected value when passed \"%w\" [663]')\n\tassertTrue (os.date ('%W', time) == '52', 'os.date() did not return expected value when passed \"%W\" [664]')\n\tassertTrue (os.date ('%x', time) == '12/31/00', 'os.date() did not return expected value when passed \"%x\" [665]')\n\tassertTrue (os.date ('%X', time) == '12:00:00', 'os.date() did not return expected value when passed \"%X\" [666]')\n\tassertTrue (os.date ('%y', time) == '00', 'os.date() did not return expected value when passed \"%y\" [667]')\n\tassertTrue (os.date ('%Y', time) == '2000', 'os.date() did not return expected value when passed \"%Y\" [668]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [669]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [670]')\n\tassertTrue (os.date ('!%a', time) == 'Sun', 'os.date() did not return expected value when passed \"!%a\" [671]')\n\tassertTrue (os.date ('!%A', time) == 'Sunday', 'os.date() did not return expected value when passed \"!%A\" [672]')\n\tassertTrue (os.date ('!%b', time) == 'Dec', 'os.date() did not return expected value when passed \"!%b\" [673]')\n\tassertTrue (os.date ('!%B', time) == 'December', 'os.date() did not return expected value when passed \"!%B\" [674]')\n\tassertTrue (os.date ('!%d', time) == '31', 'os.date() did not return expected value when passed \"!%d\" [675]')\n\tassertTrue (os.date ('!%H', time) == '12', 'os.date() did not return expected value when passed \"!%H\" [676]')\n\tassertTrue (os.date ('!%I', time) == '12', 'os.date() did not return expected value when passed \"!%I\" [677]')\n\tassertTrue (os.date ('!%j', time) == '366', 'os.date() did not return expected value when passed \"!%j\" [678]')\n\tassertTrue (os.date ('!%m', time) == '12', 'os.date() did not return expected value when passed \"!%m\" [679]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [680]')\n\tassertTrue (os.date ('!%p', time) == 'PM', 'os.date() did not return expected value when passed \"!%p\" [681]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [682]')\n\tassertTrue (os.date ('!%U', time) == '53', 'os.date() did not return expected value when passed \"!%U\" [683]')\n\tassertTrue (os.date ('!%w', time) == '0', 'os.date() did not return expected value when passed \"!%w\" [684]')\n\tassertTrue (os.date ('!%W', time) == '52', 'os.date() did not return expected value when passed \"!%W\" [685]')\n\tassertTrue (os.date ('!%x', time) == '12/31/00', 'os.date() did not return expected value when passed \"!%x\" [686]')\n\tassertTrue (os.date ('!%X', time) == '12:00:00', 'os.date() did not return expected value when passed \"!%X\" [687]')\n\tassertTrue (os.date ('!%y', time) == '00', 'os.date() did not return expected value when passed \"!%y\" [688]')\n\tassertTrue (os.date ('!%Y', time) == '2000', 'os.date() did not return expected value when passed \"!%Y\" [689]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [690]')\n\tassertTrue (os.date ('*t', time).hour == 12, 'os.date() did not return expected value when passed \"*t\" [691]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [692]')\n\tassertTrue (os.date ('*t', time).wday == 1, 'os.date() did not return expected value when passed \"*t\" [693]')\n\tassertTrue (os.date ('*t', time).day == 31, 'os.date() did not return expected value when passed \"*t\" [694]')\n\tassertTrue (os.date ('*t', time).month == 12, 'os.date() did not return expected value when passed \"*t\" [695]')\n\tassertTrue (os.date ('*t', time).year == 2000, 'os.date() did not return expected value when passed \"*t\" [696]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [697]')\n\tassertTrue (os.date ('*t', time).yday == 366, 'os.date() did not return expected value when passed \"*t\" [698]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [699]')\n\tassertTrue (os.date ('!*t', time).hour == 12, 'os.date() did not return expected value when passed \"!*t\" [700]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [701]')\n\tassertTrue (os.date ('!*t', time).wday == 1, 'os.date() did not return expected value when passed \"!*t\" [702]')\n\tassertTrue (os.date ('!*t', time).day == 31, 'os.date() did not return expected value when passed \"!*t\" [703]')\n\tassertTrue (os.date ('!*t', time).month == 12, 'os.date() did not return expected value when passed \"!*t\" [704]')\n\tassertTrue (os.date ('!*t', time).year == 2000, 'os.date() did not return expected value when passed \"!*t\" [705]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [706]')\n\tassertTrue (os.date ('!*t', time).yday == 366, 'os.date() did not return expected value when passed \"!*t\" [707]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [708]')\n\n\tlocal time = 1293843600\n\n\tassertTrue (os.date ('%a', time) == 'Sat', 'os.date() did not return expected value when passed \"%a\" [709]')\n\tassertTrue (os.date ('%A', time) == 'Saturday', 'os.date() did not return expected value when passed \"%A\" [710]')\n\tassertTrue (os.date ('%b', time) == 'Jan', 'os.date() did not return expected value when passed \"%b\" [711]')\n\tassertTrue (os.date ('%B', time) == 'January', 'os.date() did not return expected value when passed \"%B\" [712]')\n\tassertTrue (os.date ('%d', time) == '01', 'os.date() did not return expected value when passed \"%d\" [713]')\n\tassertTrue (os.date ('%H', time) == '01', 'os.date() did not return expected value when passed \"%H\" [714]')\n\tassertTrue (os.date ('%I', time) == '01', 'os.date() did not return expected value when passed \"%I\" [715]')\n\tassertTrue (os.date ('%j', time) == '001', 'os.date() did not return expected value when passed \"%j\" [716]')\n\tassertTrue (os.date ('%m', time) == '01', 'os.date() did not return expected value when passed \"%m\" [717]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [718]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [719]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [720]')\n\tassertTrue (os.date ('%U', time) == '00', 'os.date() did not return expected value when passed \"%U\" [721]')\n\tassertTrue (os.date ('%w', time) == '6', 'os.date() did not return expected value when passed \"%w\" [722]')\n\tassertTrue (os.date ('%W', time) == '00', 'os.date() did not return expected value when passed \"%W\" [723]')\n\tassertTrue (os.date ('%x', time) == '01/01/11', 'os.date() did not return expected value when passed \"%x\" [724]')\n\tassertTrue (os.date ('%X', time) == '01:00:00', 'os.date() did not return expected value when passed \"%X\" [725]')\n\tassertTrue (os.date ('%y', time) == '11', 'os.date() did not return expected value when passed \"%y\" [726]')\n\tassertTrue (os.date ('%Y', time) == '2011', 'os.date() did not return expected value when passed \"%Y\" [727]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [728]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [729]')\n\tassertTrue (os.date ('!%a', time) == 'Sat', 'os.date() did not return expected value when passed \"!%a\" [730]')\n\tassertTrue (os.date ('!%A', time) == 'Saturday', 'os.date() did not return expected value when passed \"!%A\" [731]')\n\tassertTrue (os.date ('!%b', time) == 'Jan', 'os.date() did not return expected value when passed \"!%b\" [732]')\n\tassertTrue (os.date ('!%B', time) == 'January', 'os.date() did not return expected value when passed \"!%B\" [733]')\n\tassertTrue (os.date ('!%d', time) == '01', 'os.date() did not return expected value when passed \"!%d\" [734]')\n\tassertTrue (os.date ('!%H', time) == '01', 'os.date() did not return expected value when passed \"!%H\" [735]')\n\tassertTrue (os.date ('!%I', time) == '01', 'os.date() did not return expected value when passed \"!%I\" [736]')\n\tassertTrue (os.date ('!%j', time) == '001', 'os.date() did not return expected value when passed \"!%j\" [737]')\n\tassertTrue (os.date ('!%m', time) == '01', 'os.date() did not return expected value when passed \"!%m\" [738]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [739]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [740]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [741]')\n\tassertTrue (os.date ('!%U', time) == '00', 'os.date() did not return expected value when passed \"!%U\" [742]')\n\tassertTrue (os.date ('!%w', time) == '6', 'os.date() did not return expected value when passed \"!%w\" [743]')\n\tassertTrue (os.date ('!%W', time) == '00', 'os.date() did not return expected value when passed \"!%W\" [744]')\n\tassertTrue (os.date ('!%x', time) == '01/01/11', 'os.date() did not return expected value when passed \"!%x\" [745]')\n\tassertTrue (os.date ('!%X', time) == '01:00:00', 'os.date() did not return expected value when passed \"!%X\" [746]')\n\tassertTrue (os.date ('!%y', time) == '11', 'os.date() did not return expected value when passed \"!%y\" [747]')\n\tassertTrue (os.date ('!%Y', time) == '2011', 'os.date() did not return expected value when passed \"!%Y\" [748]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [749]')\n\tassertTrue (os.date ('*t', time).hour == 1, 'os.date() did not return expected value when passed \"*t\" [750]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [751]')\n\tassertTrue (os.date ('*t', time).wday == 7, 'os.date() did not return expected value when passed \"*t\" [752]')\n\tassertTrue (os.date ('*t', time).day == 1, 'os.date() did not return expected value when passed \"*t\" [753]')\n\tassertTrue (os.date ('*t', time).month == 1, 'os.date() did not return expected value when passed \"*t\" [754]')\n\tassertTrue (os.date ('*t', time).year == 2011, 'os.date() did not return expected value when passed \"*t\" [755]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [756]')\n\tassertTrue (os.date ('*t', time).yday == 1, 'os.date() did not return expected value when passed \"*t\" [757]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [758]')\n\tassertTrue (os.date ('!*t', time).hour == 1, 'os.date() did not return expected value when passed \"!*t\" [759]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [760]')\n\tassertTrue (os.date ('!*t', time).wday == 7, 'os.date() did not return expected value when passed \"!*t\" [761]')\n\tassertTrue (os.date ('!*t', time).day == 1, 'os.date() did not return expected value when passed \"!*t\" [762]')\n\tassertTrue (os.date ('!*t', time).month == 1, 'os.date() did not return expected value when passed \"!*t\" [763]')\n\tassertTrue (os.date ('!*t', time).year == 2011, 'os.date() did not return expected value when passed \"!*t\" [764]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [765]')\n\tassertTrue (os.date ('!*t', time).yday == 1, 'os.date() did not return expected value when passed \"!*t\" [766]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [767]')\n\n\tlocal time = 1296525600\n\n\tassertTrue (os.date ('%a', time) == 'Tue', 'os.date() did not return expected value when passed \"%a\" [768]')\n\tassertTrue (os.date ('%A', time) == 'Tuesday', 'os.date() did not return expected value when passed \"%A\" [769]')\n\tassertTrue (os.date ('%b', time) == 'Feb', 'os.date() did not return expected value when passed \"%b\" [770]')\n\tassertTrue (os.date ('%B', time) == 'February', 'os.date() did not return expected value when passed \"%B\" [771]')\n\tassertTrue (os.date ('%d', time) == '01', 'os.date() did not return expected value when passed \"%d\" [772]')\n\tassertTrue (os.date ('%H', time) == '02', 'os.date() did not return expected value when passed \"%H\" [773]')\n\tassertTrue (os.date ('%I', time) == '02', 'os.date() did not return expected value when passed \"%I\" [774]')\n\tassertTrue (os.date ('%j', time) == '032', 'os.date() did not return expected value when passed \"%j\" [775]')\n\tassertTrue (os.date ('%m', time) == '02', 'os.date() did not return expected value when passed \"%m\" [776]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [777]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [778]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [779]')\n\tassertTrue (os.date ('%U', time) == '05', 'os.date() did not return expected value when passed \"%U\" [780]')\n\tassertTrue (os.date ('%w', time) == '2', 'os.date() did not return expected value when passed \"%w\" [781]')\n\tassertTrue (os.date ('%W', time) == '05', 'os.date() did not return expected value when passed \"%W\" [782]')\n\tassertTrue (os.date ('%x', time) == '02/01/11', 'os.date() did not return expected value when passed \"%x\" [783]')\n\tassertTrue (os.date ('%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"%X\" [784]')\n\tassertTrue (os.date ('%y', time) == '11', 'os.date() did not return expected value when passed \"%y\" [785]')\n\tassertTrue (os.date ('%Y', time) == '2011', 'os.date() did not return expected value when passed \"%Y\" [786]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [787]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [788]')\n\tassertTrue (os.date ('!%a', time) == 'Tue', 'os.date() did not return expected value when passed \"!%a\" [789]')\n\tassertTrue (os.date ('!%A', time) == 'Tuesday', 'os.date() did not return expected value when passed \"!%A\" [790]')\n\tassertTrue (os.date ('!%b', time) == 'Feb', 'os.date() did not return expected value when passed \"!%b\" [791]')\n\tassertTrue (os.date ('!%B', time) == 'February', 'os.date() did not return expected value when passed \"!%B\" [792]')\n\tassertTrue (os.date ('!%d', time) == '01', 'os.date() did not return expected value when passed \"!%d\" [793]')\n\tassertTrue (os.date ('!%H', time) == '02', 'os.date() did not return expected value when passed \"!%H\" [794]')\n\tassertTrue (os.date ('!%I', time) == '02', 'os.date() did not return expected value when passed \"!%I\" [795]')\n\tassertTrue (os.date ('!%j', time) == '032', 'os.date() did not return expected value when passed \"!%j\" [796]')\n\tassertTrue (os.date ('!%m', time) == '02', 'os.date() did not return expected value when passed \"!%m\" [797]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [798]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [799]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [800]')\n\tassertTrue (os.date ('!%U', time) == '05', 'os.date() did not return expected value when passed \"!%U\" [801]')\n\tassertTrue (os.date ('!%w', time) == '2', 'os.date() did not return expected value when passed \"!%w\" [802]')\n\tassertTrue (os.date ('!%W', time) == '05', 'os.date() did not return expected value when passed \"!%W\" [803]')\n\tassertTrue (os.date ('!%x', time) == '02/01/11', 'os.date() did not return expected value when passed \"!%x\" [804]')\n\tassertTrue (os.date ('!%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"!%X\" [805]')\n\tassertTrue (os.date ('!%y', time) == '11', 'os.date() did not return expected value when passed \"!%y\" [806]')\n\tassertTrue (os.date ('!%Y', time) == '2011', 'os.date() did not return expected value when passed \"!%Y\" [807]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [808]')\n\tassertTrue (os.date ('*t', time).hour == 2, 'os.date() did not return expected value when passed \"*t\" [809]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [810]')\n\tassertTrue (os.date ('*t', time).wday == 3, 'os.date() did not return expected value when passed \"*t\" [811]')\n\tassertTrue (os.date ('*t', time).day == 1, 'os.date() did not return expected value when passed \"*t\" [812]')\n\tassertTrue (os.date ('*t', time).month == 2, 'os.date() did not return expected value when passed \"*t\" [813]')\n\tassertTrue (os.date ('*t', time).year == 2011, 'os.date() did not return expected value when passed \"*t\" [814]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [815]')\n\tassertTrue (os.date ('*t', time).yday == 32, 'os.date() did not return expected value when passed \"*t\" [816]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [817]')\n\tassertTrue (os.date ('!*t', time).hour == 2, 'os.date() did not return expected value when passed \"!*t\" [818]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [819]')\n\tassertTrue (os.date ('!*t', time).wday == 3, 'os.date() did not return expected value when passed \"!*t\" [820]')\n\tassertTrue (os.date ('!*t', time).day == 1, 'os.date() did not return expected value when passed \"!*t\" [821]')\n\tassertTrue (os.date ('!*t', time).month == 2, 'os.date() did not return expected value when passed \"!*t\" [822]')\n\tassertTrue (os.date ('!*t', time).year == 2011, 'os.date() did not return expected value when passed \"!*t\" [823]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [824]')\n\tassertTrue (os.date ('!*t', time).yday == 32, 'os.date() did not return expected value when passed \"!*t\" [825]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [826]')\n\n\tlocal time = 1298858400\n\n\tassertTrue (os.date ('%a', time) == 'Mon', 'os.date() did not return expected value when passed \"%a\" [827]')\n\tassertTrue (os.date ('%A', time) == 'Monday', 'os.date() did not return expected value when passed \"%A\" [828]')\n\tassertTrue (os.date ('%b', time) == 'Feb', 'os.date() did not return expected value when passed \"%b\" [829]')\n\tassertTrue (os.date ('%B', time) == 'February', 'os.date() did not return expected value when passed \"%B\" [830]')\n\tassertTrue (os.date ('%d', time) == '28', 'os.date() did not return expected value when passed \"%d\" [831]')\n\tassertTrue (os.date ('%H', time) == '02', 'os.date() did not return expected value when passed \"%H\" [832]')\n\tassertTrue (os.date ('%I', time) == '02', 'os.date() did not return expected value when passed \"%I\" [833]')\n\tassertTrue (os.date ('%j', time) == '059', 'os.date() did not return expected value when passed \"%j\" [834]')\n\tassertTrue (os.date ('%m', time) == '02', 'os.date() did not return expected value when passed \"%m\" [835]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [836]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [837]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [838]')\n\tassertTrue (os.date ('%U', time) == '09', 'os.date() did not return expected value when passed \"%U\" [839]')\n\tassertTrue (os.date ('%w', time) == '1', 'os.date() did not return expected value when passed \"%w\" [840]')\n\tassertTrue (os.date ('%W', time) == '09', 'os.date() did not return expected value when passed \"%W\" [841]')\n\tassertTrue (os.date ('%x', time) == '02/28/11', 'os.date() did not return expected value when passed \"%x\" [842]')\n\tassertTrue (os.date ('%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"%X\" [843]')\n\tassertTrue (os.date ('%y', time) == '11', 'os.date() did not return expected value when passed \"%y\" [844]')\n\tassertTrue (os.date ('%Y', time) == '2011', 'os.date() did not return expected value when passed \"%Y\" [845]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [846]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [847]')\n\tassertTrue (os.date ('!%a', time) == 'Mon', 'os.date() did not return expected value when passed \"!%a\" [848]')\n\tassertTrue (os.date ('!%A', time) == 'Monday', 'os.date() did not return expected value when passed \"!%A\" [849]')\n\tassertTrue (os.date ('!%b', time) == 'Feb', 'os.date() did not return expected value when passed \"!%b\" [850]')\n\tassertTrue (os.date ('!%B', time) == 'February', 'os.date() did not return expected value when passed \"!%B\" [851]')\n\tassertTrue (os.date ('!%d', time) == '28', 'os.date() did not return expected value when passed \"!%d\" [852]')\n\tassertTrue (os.date ('!%H', time) == '02', 'os.date() did not return expected value when passed \"!%H\" [853]')\n\tassertTrue (os.date ('!%I', time) == '02', 'os.date() did not return expected value when passed \"!%I\" [854]')\n\tassertTrue (os.date ('!%j', time) == '059', 'os.date() did not return expected value when passed \"!%j\" [855]')\n\tassertTrue (os.date ('!%m', time) == '02', 'os.date() did not return expected value when passed \"!%m\" [856]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [857]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [858]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [859]')\n\tassertTrue (os.date ('!%U', time) == '09', 'os.date() did not return expected value when passed \"!%U\" [860]')\n\tassertTrue (os.date ('!%w', time) == '1', 'os.date() did not return expected value when passed \"!%w\" [861]')\n\tassertTrue (os.date ('!%W', time) == '09', 'os.date() did not return expected value when passed \"!%W\" [862]')\n\tassertTrue (os.date ('!%x', time) == '02/28/11', 'os.date() did not return expected value when passed \"!%x\" [863]')\n\tassertTrue (os.date ('!%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"!%X\" [864]')\n\tassertTrue (os.date ('!%y', time) == '11', 'os.date() did not return expected value when passed \"!%y\" [865]')\n\tassertTrue (os.date ('!%Y', time) == '2011', 'os.date() did not return expected value when passed \"!%Y\" [866]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [867]')\n\tassertTrue (os.date ('*t', time).hour == 2, 'os.date() did not return expected value when passed \"*t\" [868]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [869]')\n\tassertTrue (os.date ('*t', time).wday == 2, 'os.date() did not return expected value when passed \"*t\" [870]')\n\tassertTrue (os.date ('*t', time).day == 28, 'os.date() did not return expected value when passed \"*t\" [871]')\n\tassertTrue (os.date ('*t', time).month == 2, 'os.date() did not return expected value when passed \"*t\" [872]')\n\tassertTrue (os.date ('*t', time).year == 2011, 'os.date() did not return expected value when passed \"*t\" [873]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [874]')\n\tassertTrue (os.date ('*t', time).yday == 59, 'os.date() did not return expected value when passed \"*t\" [875]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [876]')\n\tassertTrue (os.date ('!*t', time).hour == 2, 'os.date() did not return expected value when passed \"!*t\" [877]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [878]')\n\tassertTrue (os.date ('!*t', time).wday == 2, 'os.date() did not return expected value when passed \"!*t\" [879]')\n\tassertTrue (os.date ('!*t', time).day == 28, 'os.date() did not return expected value when passed \"!*t\" [880]')\n\tassertTrue (os.date ('!*t', time).month == 2, 'os.date() did not return expected value when passed \"!*t\" [881]')\n\tassertTrue (os.date ('!*t', time).year == 2011, 'os.date() did not return expected value when passed \"!*t\" [882]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [883]')\n\tassertTrue (os.date ('!*t', time).yday == 59, 'os.date() did not return expected value when passed \"!*t\" [884]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [885]')\n\n\tlocal time = 1298944800\n\n\tassertTrue (os.date ('%a', time) == 'Tue', 'os.date() did not return expected value when passed \"%a\" [886]')\n\tassertTrue (os.date ('%A', time) == 'Tuesday', 'os.date() did not return expected value when passed \"%A\" [887]')\n\tassertTrue (os.date ('%b', time) == 'Mar', 'os.date() did not return expected value when passed \"%b\" [888]')\n\tassertTrue (os.date ('%B', time) == 'March', 'os.date() did not return expected value when passed \"%B\" [889]')\n\tassertTrue (os.date ('%d', time) == '01', 'os.date() did not return expected value when passed \"%d\" [890]')\n\tassertTrue (os.date ('%H', time) == '02', 'os.date() did not return expected value when passed \"%H\" [891]')\n\tassertTrue (os.date ('%I', time) == '02', 'os.date() did not return expected value when passed \"%I\" [892]')\n\tassertTrue (os.date ('%j', time) == '060', 'os.date() did not return expected value when passed \"%j\" [893]')\n\tassertTrue (os.date ('%m', time) == '03', 'os.date() did not return expected value when passed \"%m\" [894]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [895]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [896]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [897]')\n\tassertTrue (os.date ('%U', time) == '09', 'os.date() did not return expected value when passed \"%U\" [898]')\n\tassertTrue (os.date ('%w', time) == '2', 'os.date() did not return expected value when passed \"%w\" [899]')\n\tassertTrue (os.date ('%W', time) == '09', 'os.date() did not return expected value when passed \"%W\" [900]')\n\tassertTrue (os.date ('%x', time) == '03/01/11', 'os.date() did not return expected value when passed \"%x\" [901]')\n\tassertTrue (os.date ('%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"%X\" [902]')\n\tassertTrue (os.date ('%y', time) == '11', 'os.date() did not return expected value when passed \"%y\" [903]')\n\tassertTrue (os.date ('%Y', time) == '2011', 'os.date() did not return expected value when passed \"%Y\" [904]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [905]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [906]')\n\tassertTrue (os.date ('!%a', time) == 'Tue', 'os.date() did not return expected value when passed \"!%a\" [907]')\n\tassertTrue (os.date ('!%A', time) == 'Tuesday', 'os.date() did not return expected value when passed \"!%A\" [908]')\n\tassertTrue (os.date ('!%b', time) == 'Mar', 'os.date() did not return expected value when passed \"!%b\" [909]')\n\tassertTrue (os.date ('!%B', time) == 'March', 'os.date() did not return expected value when passed \"!%B\" [910]')\n\tassertTrue (os.date ('!%d', time) == '01', 'os.date() did not return expected value when passed \"!%d\" [911]')\n\tassertTrue (os.date ('!%H', time) == '02', 'os.date() did not return expected value when passed \"!%H\" [912]')\n\tassertTrue (os.date ('!%I', time) == '02', 'os.date() did not return expected value when passed \"!%I\" [913]')\n\tassertTrue (os.date ('!%j', time) == '060', 'os.date() did not return expected value when passed \"!%j\" [914]')\n\tassertTrue (os.date ('!%m', time) == '03', 'os.date() did not return expected value when passed \"!%m\" [915]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [916]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [917]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [918]')\n\tassertTrue (os.date ('!%U', time) == '09', 'os.date() did not return expected value when passed \"!%U\" [919]')\n\tassertTrue (os.date ('!%w', time) == '2', 'os.date() did not return expected value when passed \"!%w\" [920]')\n\tassertTrue (os.date ('!%W', time) == '09', 'os.date() did not return expected value when passed \"!%W\" [921]')\n\tassertTrue (os.date ('!%x', time) == '03/01/11', 'os.date() did not return expected value when passed \"!%x\" [922]')\n\tassertTrue (os.date ('!%X', time) == '02:00:00', 'os.date() did not return expected value when passed \"!%X\" [923]')\n\tassertTrue (os.date ('!%y', time) == '11', 'os.date() did not return expected value when passed \"!%y\" [924]')\n\tassertTrue (os.date ('!%Y', time) == '2011', 'os.date() did not return expected value when passed \"!%Y\" [925]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [926]')\n\tassertTrue (os.date ('*t', time).hour == 2, 'os.date() did not return expected value when passed \"*t\" [927]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [928]')\n\tassertTrue (os.date ('*t', time).wday == 3, 'os.date() did not return expected value when passed \"*t\" [929]')\n\tassertTrue (os.date ('*t', time).day == 1, 'os.date() did not return expected value when passed \"*t\" [930]')\n\tassertTrue (os.date ('*t', time).month == 3, 'os.date() did not return expected value when passed \"*t\" [931]')\n\tassertTrue (os.date ('*t', time).year == 2011, 'os.date() did not return expected value when passed \"*t\" [932]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [933]')\n\tassertTrue (os.date ('*t', time).yday == 60, 'os.date() did not return expected value when passed \"*t\" [934]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [935]')\n\tassertTrue (os.date ('!*t', time).hour == 2, 'os.date() did not return expected value when passed \"!*t\" [936]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [937]')\n\tassertTrue (os.date ('!*t', time).wday == 3, 'os.date() did not return expected value when passed \"!*t\" [938]')\n\tassertTrue (os.date ('!*t', time).day == 1, 'os.date() did not return expected value when passed \"!*t\" [939]')\n\tassertTrue (os.date ('!*t', time).month == 3, 'os.date() did not return expected value when passed \"!*t\" [940]')\n\tassertTrue (os.date ('!*t', time).year == 2011, 'os.date() did not return expected value when passed \"!*t\" [941]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [942]')\n\tassertTrue (os.date ('!*t', time).yday == 60, 'os.date() did not return expected value when passed \"!*t\" [943]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [944]')\n\n\tlocal time = 1298948400\n\n\tassertTrue (os.date ('%a', time) == 'Tue', 'os.date() did not return expected value when passed \"%a\" [945]')\n\tassertTrue (os.date ('%A', time) == 'Tuesday', 'os.date() did not return expected value when passed \"%A\" [946]')\n\tassertTrue (os.date ('%b', time) == 'Mar', 'os.date() did not return expected value when passed \"%b\" [947]')\n\tassertTrue (os.date ('%B', time) == 'March', 'os.date() did not return expected value when passed \"%B\" [948]')\n\tassertTrue (os.date ('%d', time) == '01', 'os.date() did not return expected value when passed \"%d\" [949]')\n\tassertTrue (os.date ('%H', time) == '03', 'os.date() did not return expected value when passed \"%H\" [950]')\n\tassertTrue (os.date ('%I', time) == '03', 'os.date() did not return expected value when passed \"%I\" [951]')\n\tassertTrue (os.date ('%j', time) == '060', 'os.date() did not return expected value when passed \"%j\" [952]')\n\tassertTrue (os.date ('%m', time) == '03', 'os.date() did not return expected value when passed \"%m\" [953]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [954]')\n\tassertTrue (os.date ('%p', time) == 'AM', 'os.date() did not return expected value when passed \"%p\" [955]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [956]')\n\tassertTrue (os.date ('%U', time) == '09', 'os.date() did not return expected value when passed \"%U\" [957]')\n\tassertTrue (os.date ('%w', time) == '2', 'os.date() did not return expected value when passed \"%w\" [958]')\n\tassertTrue (os.date ('%W', time) == '09', 'os.date() did not return expected value when passed \"%W\" [959]')\n\tassertTrue (os.date ('%x', time) == '03/01/11', 'os.date() did not return expected value when passed \"%x\" [960]')\n\tassertTrue (os.date ('%X', time) == '03:00:00', 'os.date() did not return expected value when passed \"%X\" [961]')\n\tassertTrue (os.date ('%y', time) == '11', 'os.date() did not return expected value when passed \"%y\" [962]')\n\tassertTrue (os.date ('%Y', time) == '2011', 'os.date() did not return expected value when passed \"%Y\" [963]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [964]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [965]')\n\tassertTrue (os.date ('!%a', time) == 'Tue', 'os.date() did not return expected value when passed \"!%a\" [966]')\n\tassertTrue (os.date ('!%A', time) == 'Tuesday', 'os.date() did not return expected value when passed \"!%A\" [967]')\n\tassertTrue (os.date ('!%b', time) == 'Mar', 'os.date() did not return expected value when passed \"!%b\" [968]')\n\tassertTrue (os.date ('!%B', time) == 'March', 'os.date() did not return expected value when passed \"!%B\" [969]')\n\tassertTrue (os.date ('!%d', time) == '01', 'os.date() did not return expected value when passed \"!%d\" [970]')\n\tassertTrue (os.date ('!%H', time) == '03', 'os.date() did not return expected value when passed \"!%H\" [971]')\n\tassertTrue (os.date ('!%I', time) == '03', 'os.date() did not return expected value when passed \"!%I\" [972]')\n\tassertTrue (os.date ('!%j', time) == '060', 'os.date() did not return expected value when passed \"!%j\" [973]')\n\tassertTrue (os.date ('!%m', time) == '03', 'os.date() did not return expected value when passed \"!%m\" [974]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [975]')\n\tassertTrue (os.date ('!%p', time) == 'AM', 'os.date() did not return expected value when passed \"!%p\" [976]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [977]')\n\tassertTrue (os.date ('!%U', time) == '09', 'os.date() did not return expected value when passed \"!%U\" [978]')\n\tassertTrue (os.date ('!%w', time) == '2', 'os.date() did not return expected value when passed \"!%w\" [979]')\n\tassertTrue (os.date ('!%W', time) == '09', 'os.date() did not return expected value when passed \"!%W\" [980]')\n\tassertTrue (os.date ('!%x', time) == '03/01/11', 'os.date() did not return expected value when passed \"!%x\" [981]')\n\tassertTrue (os.date ('!%X', time) == '03:00:00', 'os.date() did not return expected value when passed \"!%X\" [982]')\n\tassertTrue (os.date ('!%y', time) == '11', 'os.date() did not return expected value when passed \"!%y\" [983]')\n\tassertTrue (os.date ('!%Y', time) == '2011', 'os.date() did not return expected value when passed \"!%Y\" [984]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [985]')\n\tassertTrue (os.date ('*t', time).hour == 3, 'os.date() did not return expected value when passed \"*t\" [986]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [987]')\n\tassertTrue (os.date ('*t', time).wday == 3, 'os.date() did not return expected value when passed \"*t\" [988]')\n\tassertTrue (os.date ('*t', time).day == 1, 'os.date() did not return expected value when passed \"*t\" [989]')\n\tassertTrue (os.date ('*t', time).month == 3, 'os.date() did not return expected value when passed \"*t\" [990]')\n\tassertTrue (os.date ('*t', time).year == 2011, 'os.date() did not return expected value when passed \"*t\" [991]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [992]')\n\tassertTrue (os.date ('*t', time).yday == 60, 'os.date() did not return expected value when passed \"*t\" [993]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [994]')\n\tassertTrue (os.date ('!*t', time).hour == 3, 'os.date() did not return expected value when passed \"!*t\" [995]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [996]')\n\tassertTrue (os.date ('!*t', time).wday == 3, 'os.date() did not return expected value when passed \"!*t\" [997]')\n\tassertTrue (os.date ('!*t', time).day == 1, 'os.date() did not return expected value when passed \"!*t\" [998]')\n\tassertTrue (os.date ('!*t', time).month == 3, 'os.date() did not return expected value when passed \"!*t\" [999]')\n\tassertTrue (os.date ('!*t', time).year == 2011, 'os.date() did not return expected value when passed \"!*t\" [1000]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [1001]')\n\tassertTrue (os.date ('!*t', time).yday == 60, 'os.date() did not return expected value when passed \"!*t\" [1002]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [1003]')\n\n\tlocal time = 1325332800\n\n\tassertTrue (os.date ('%a', time) == 'Sat', 'os.date() did not return expected value when passed \"%a\" [1004]')\n\tassertTrue (os.date ('%A', time) == 'Saturday', 'os.date() did not return expected value when passed \"%A\" [1005]')\n\tassertTrue (os.date ('%b', time) == 'Dec', 'os.date() did not return expected value when passed \"%b\" [1006]')\n\tassertTrue (os.date ('%B', time) == 'December', 'os.date() did not return expected value when passed \"%B\" [1007]')\n\tassertTrue (os.date ('%d', time) == '31', 'os.date() did not return expected value when passed \"%d\" [1008]')\n\tassertTrue (os.date ('%H', time) == '12', 'os.date() did not return expected value when passed \"%H\" [1009]')\n\tassertTrue (os.date ('%I', time) == '12', 'os.date() did not return expected value when passed \"%I\" [1010]')\n\tassertTrue (os.date ('%j', time) == '365', 'os.date() did not return expected value when passed \"%j\" [1011]')\n\tassertTrue (os.date ('%m', time) == '12', 'os.date() did not return expected value when passed \"%m\" [1012]')\n\tassertTrue (os.date ('%M', time) == '00', 'os.date() did not return expected value when passed \"%M\" [1013]')\n\tassertTrue (os.date ('%p', time) == 'PM', 'os.date() did not return expected value when passed \"%p\" [1014]')\n\tassertTrue (os.date ('%S', time) == '00', 'os.date() did not return expected value when passed \"%S\" [1015]')\n\tassertTrue (os.date ('%U', time) == '52', 'os.date() did not return expected value when passed \"%U\" [1016]')\n\tassertTrue (os.date ('%w', time) == '6', 'os.date() did not return expected value when passed \"%w\" [1017]')\n\tassertTrue (os.date ('%W', time) == '52', 'os.date() did not return expected value when passed \"%W\" [1018]')\n\tassertTrue (os.date ('%x', time) == '12/31/11', 'os.date() did not return expected value when passed \"%x\" [1019]')\n\tassertTrue (os.date ('%X', time) == '12:00:00', 'os.date() did not return expected value when passed \"%X\" [1020]')\n\tassertTrue (os.date ('%y', time) == '11', 'os.date() did not return expected value when passed \"%y\" [1021]')\n\tassertTrue (os.date ('%Y', time) == '2011', 'os.date() did not return expected value when passed \"%Y\" [1022]')\n\tassertTrue (os.date ('%Z', time) == 'GMT', 'os.date() did not return expected value when passed \"%Z\" [1023]')\n\tassertTrue (os.date ('%%', time) == '%', 'os.date() did not return expected value when passed \"%%\" [1024]')\n\tassertTrue (os.date ('!%a', time) == 'Sat', 'os.date() did not return expected value when passed \"!%a\" [1025]')\n\tassertTrue (os.date ('!%A', time) == 'Saturday', 'os.date() did not return expected value when passed \"!%A\" [1026]')\n\tassertTrue (os.date ('!%b', time) == 'Dec', 'os.date() did not return expected value when passed \"!%b\" [1027]')\n\tassertTrue (os.date ('!%B', time) == 'December', 'os.date() did not return expected value when passed \"!%B\" [1028]')\n\tassertTrue (os.date ('!%d', time) == '31', 'os.date() did not return expected value when passed \"!%d\" [1029]')\n\tassertTrue (os.date ('!%H', time) == '12', 'os.date() did not return expected value when passed \"!%H\" [1030]')\n\tassertTrue (os.date ('!%I', time) == '12', 'os.date() did not return expected value when passed \"!%I\" [1031]')\n\tassertTrue (os.date ('!%j', time) == '365', 'os.date() did not return expected value when passed \"!%j\" [1032]')\n\tassertTrue (os.date ('!%m', time) == '12', 'os.date() did not return expected value when passed \"!%m\" [1033]')\n\tassertTrue (os.date ('!%M', time) == '00', 'os.date() did not return expected value when passed \"!%M\" [1034]')\n\tassertTrue (os.date ('!%p', time) == 'PM', 'os.date() did not return expected value when passed \"!%p\" [1035]')\n\tassertTrue (os.date ('!%S', time) == '00', 'os.date() did not return expected value when passed \"!%S\" [1036]')\n\tassertTrue (os.date ('!%U', time) == '52', 'os.date() did not return expected value when passed \"!%U\" [1037]')\n\tassertTrue (os.date ('!%w', time) == '6', 'os.date() did not return expected value when passed \"!%w\" [1038]')\n\tassertTrue (os.date ('!%W', time) == '52', 'os.date() did not return expected value when passed \"!%W\" [1039]')\n\tassertTrue (os.date ('!%x', time) == '12/31/11', 'os.date() did not return expected value when passed \"!%x\" [1040]')\n\tassertTrue (os.date ('!%X', time) == '12:00:00', 'os.date() did not return expected value when passed \"!%X\" [1041]')\n\tassertTrue (os.date ('!%y', time) == '11', 'os.date() did not return expected value when passed \"!%y\" [1042]')\n\tassertTrue (os.date ('!%Y', time) == '2011', 'os.date() did not return expected value when passed \"!%Y\" [1043]')\n\tassertTrue (os.date ('!%Z', time) == 'UTC', 'os.date() did not return expected value when passed \"!%Z\" [1044]')\n\tassertTrue (os.date ('*t', time).hour == 12, 'os.date() did not return expected value when passed \"*t\" [1045]')\n\tassertTrue (os.date ('*t', time).min == 0, 'os.date() did not return expected value when passed \"*t\" [1046]')\n\tassertTrue (os.date ('*t', time).wday == 7, 'os.date() did not return expected value when passed \"*t\" [1047]')\n\tassertTrue (os.date ('*t', time).day == 31, 'os.date() did not return expected value when passed \"*t\" [1048]')\n\tassertTrue (os.date ('*t', time).month == 12, 'os.date() did not return expected value when passed \"*t\" [1049]')\n\tassertTrue (os.date ('*t', time).year == 2011, 'os.date() did not return expected value when passed \"*t\" [1050]')\n\tassertTrue (os.date ('*t', time).sec == 0, 'os.date() did not return expected value when passed \"*t\" [1051]')\n\tassertTrue (os.date ('*t', time).yday == 365, 'os.date() did not return expected value when passed \"*t\" [1052]')\n\tassertTrue (os.date ('*t', time).isdst == false, 'os.date() did not return expected value when passed \"*t\" [1053]')\n\tassertTrue (os.date ('!*t', time).hour == 12, 'os.date() did not return expected value when passed \"!*t\" [1054]')\n\tassertTrue (os.date ('!*t', time).min == 0, 'os.date() did not return expected value when passed \"!*t\" [1055]')\n\tassertTrue (os.date ('!*t', time).wday == 7, 'os.date() did not return expected value when passed \"!*t\" [1056]')\n\tassertTrue (os.date ('!*t', time).day == 31, 'os.date() did not return expected value when passed \"!*t\" [1057]')\n\tassertTrue (os.date ('!*t', time).month == 12, 'os.date() did not return expected value when passed \"!*t\" [1058]')\n\tassertTrue (os.date ('!*t', time).year == 2011, 'os.date() did not return expected value when passed \"!*t\" [1059]')\n\tassertTrue (os.date ('!*t', time).sec == 0, 'os.date() did not return expected value when passed \"!*t\" [1060]')\n\tassertTrue (os.date ('!*t', time).yday == 365, 'os.date() did not return expected value when passed \"!*t\" [1061]')\n\tassertTrue (os.date ('!*t', time).isdst == false, 'os.date() did not return expected value when passed \"!*t\" [1062]')\n\n\n\nend \n\ndatetest ()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nshowResults ()","lineDefined":null,"lastLineDefined":null,"upvalueCount":null,"paramCount":null,"is_vararg":null,"maxStackSize":null,"instructions":[],"constants":[],"functions":[],"linePositions":[],"locals":[],"upvalues":[]}