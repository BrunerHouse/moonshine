#!/usr/bin/env node

/**
 * @fileOverview Moonshine CLI binary.
 * @author <a href="mailto:paul.cuthbertson@gamesys.co.uk">Paul Cuthbertson</a>
 * @copyright Gamesys Ltd 2013
 */




var command = process.argv[2],
	filename = process.argv[process.argv.length - 1],
	switches = {},
	Parser = require('../distil/distil.moonshine.js').Parser,
	exec = require('child_process').exec,
	fs = require('fs'),
	i;


for (i = 3; i < process.argv.length - 1; i++) switches[process.argv[i]] = 1;


switch (command) {
	case 'distil': return distil(filename);
	case 'distil-lua': return distilLua(filename);
	case 'distil-luac': return distilLuac(filename);
	default: return console.log('Unknown command: ' + command);
}




function distil (filename) {
	if (filename.match(/.*\.lua$/)) {
		distilLua(filename);
	} else {
		distilLuac(filename);
	}
}




function distilLua (filename) {
	var luacFilename = filename + '.luac';

	exec('luac -o ' + luacFilename + ' ' + filename, function (err, stdout, stderr) {
		if (err) throw new Error(err);

		distilLuac(luacFilename);
		fs.unlink(luacFilename);
	});
}




function distilLuac (filename) {
	var parser = new Parser(),
		config = {
			stripDebugging: switches['-m'],
			useInstructionObjects: switches['-o']
		};

	parser.parse(filename, config, function (tree) {
		if (match = filename.match(/(.*)\.luac$/)) filename = match[1];

		fs.writeFile(filename + '.json', JSON.stringify(tree), function (err) {
			if (err) throw new Error(err);
			console.log('File written: ' + filename + '.json');
		});
	});
}



