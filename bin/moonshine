#!/usr/bin/env node

/**
 * @fileOverview Moonshine CLI binary.
 * @author <a href="mailto:paul.cuthbertson@gamesys.co.uk">Paul Cuthbertson</a>
 * @copyright Gamesys Ltd 2013
 */




var command = process.argv[2],
	filenames = [],
	switches = {},
	Parser = require('../distil/distil.moonshine.js').Parser,
	exec = require('child_process').exec,
	fs = require('fs'),
	arg, i, l;


for (i = 3, l = process.argv.length; i < l; i++) {
	arg = process.argv[i];

	if (arg.substr(0, 1) === '-') {
		switches[arg] = 1;
	} else {
		filenames.push(arg);
	}
}


switch (command) {
	case 'distil': return distil(filenames);
	default: return console.log('Unknown command: ' + command);
}




function distil (filenames) {
	var filename, i, l;

	for (i = 0, l = filenames.length; i < l; i++) {
		filename = filenames[i];
		if (/^.*\.lua$/.test(filename)) distilLua(filename);
	}
}




function distilLua (filename) {
	var luacFilename = filename + '.luac';

	exec('luac -o ' + luacFilename + ' ' + filename, function (err, stdout, stderr) {
		if (err) throw new Error(err);

		distilLuac(luacFilename);
		fs.unlink(luacFilename);
	});
}




function distilLuac (filename) {
	var parser = new Parser(),
		config = {
			stripDebugging: switches['-m'],
			useInstructionObjects: switches['-o']
		};

	parser.parse(filename, config, function (tree) {
		if (match = filename.match(/^(.*)\.luac$/)) filename = match[1];

		fs.writeFile(filename + '.json', JSON.stringify(tree), function (err) {
			if (err) throw new Error(err);
			console.log('File written: ' + filename + '.json');
		});
	});
}



